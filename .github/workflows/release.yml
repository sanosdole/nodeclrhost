# This is a basic workflow to help you get started with Actions

name: Release

# Controls when the workflow will run
on:
  release:
    types: [published]
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-windows:
    # The type of runner that the job will run on
    runs-on: windows-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.5.0
        with:
          node-version: 16.x
          
      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version:  | 
            3.1.x
            5.0.x

      - name: Show node version
        run: node --version
        
      - name: Show dotnet version
        run: dotnet --version
        
      - name: Install prebuild
        run: npm i -g prebuild
        
      - name: build & test coreclrhosting
        run: |
          cd coreclr-hosting
          npm version "%GITHUB_REF:~11%" --allow-same-version;
          npm ci --build-from-source          
          prebuild -t 14.16.0 --include-regex "\.(node|a|dll|so|dylib|pdb)$";  
          prebuild -t 16.13.1 --include-regex "\.(node|a|dll|so|dylib)$";                   
          prebuild -t 14.0.0 -r electron --include-regex "\.(node|a|dll|so|dylib)$";
          prebuild -t 15.0.0 -r electron --include-regex "\.(node|a|dll|so|dylib)$";
          prebuild -t 16.0.0 -r electron --include-regex "\.(node|a|dll|so|dylib)$";
          npm run build-testapp
          npm run mocha
          cd ..

      - name: build electron-blazor-glue
        run: |
          cd electron-blazor-glue
          npm ci
          npm run build-js-glue:release
          cd ..
      
      - uses: xresloader/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: "coreclr-hosting/prebuilds/*"
          tags: true

      - name: build nuget packages
        run: |
          cd NodeHostEnvironment
          dotnet pack -c Release
          cd ../ElectronHostedBlazor
          dotnet pack -c Release
  
  build-linux:
    environment: deploy
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.5.0
        with:
          node-version: 16.x
          
      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version:  | 
            3.1.x
            5.0.x

      - name: Show node version
        run: node --version
        
      - name: Show dotnet version
        run: dotnet --version
        
      - name: Install prebuild
        run: npm i -g prebuild
        
      - name: build & test coreclrhosting
        run: |
          cd coreclr-hosting
          npm version "${GITHUB_REF:11}" --allow-same-version
          npm ci --build-from-source
          prebuild -t 14.16.0 --include-regex "\.(node|a|dll|so|dylib|pdb)$"
          prebuild -t 16.13.1 --include-regex "\.(node|a|dll|so|dylib)$"
          prebuild -t 14.0.0 -r electron --include-regex "\.(node|a|dll|so|dylib)$"
          prebuild -t 15.0.0 -r electron --include-regex "\.(node|a|dll|so|dylib)$"
          prebuild -t 16.0.0 -r electron --include-regex "\.(node|a|dll|so|dylib)$"
          npm run build-testapp
          npm run mocha
          cd ..

      - name: build electron-blazor-glue
        run: |
          cd electron-blazor-glue
          npm version "${GITHUB_REF:11}" --allow-same-version
          npm ci
          npm run build-js-glue:release
          cd ..
      
      - uses: xresloader/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: "coreclr-hosting/prebuilds/*"
          tags: true

      - name: deploy to npm
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          cd coreclr-hosting
          echo "//registry.npmjs.org/:_authToken=\${NPM_TOKEN}" > .npmrc
          echo "Publishing coreclr-hosting for tag ""${GITHUB_REF:11}"
          npm version "${GITHUB_REF:11}" --allow-same-version
          npm publish --access public --ignore-scripts
          cd ../electron-blazor-glue
          echo "//registry.npmjs.org/:_authToken=\${NPM_TOKEN}" > .npmrc
          echo "Publishing electron-blazor-glue for tag ${GITHUB_REF:11}"
          sed -i 's!"coreclr-hosting": "file:../coreclr-hosting"!"coreclr-hosting": "'"${GITHUB_REF:11}"'"!g' package.json
          npm version "${GITHUB_REF:11}" --allow-same-version
          npm publish --access public --ignore-scripts

      - name: build nuget packages
        run: |
          cd NodeHostEnvironment
          dotnet pack -c Release
          cd ../ElectronHostedBlazor
          dotnet pack -c Release

      - name: publish nuget packages
        env:
          NUGET_TOKEN: ${{ secrets.NUGET_TOKEN }}
        run: |
          cd NodeHostEnvironment/bin/Release
          dotnet nuget push NodeHostEnvironment."${GITHUB_REF:11}".nupkg -k "$NUGET_TOKEN" -s https://api.nuget.org/v3/index.json
          cd ../../../ElectronHostedBlazor/bin/Release
          dotnet nuget push ElectronHostedBlazor."${GITHUB_REF:11}".nupkg -k "$NUGET_TOKEN" -s https://api.nuget.org/v3/index.json
          cd ../../..

      - uses: xresloader/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: "NodeHostEnvironment/bin/Release/*.snupkg;NodeHostEnvironment/bin/Release/*.nupkg;ElectronHostedBlazor/bin/Release/*.snupkg;ElectronHostedBlazor/bin/Release/*.nupkg"
          tags: true

  build-macos:
    # The type of runner that the job will run on
    runs-on: macos-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.5.0
        with:
          node-version: 16.x
          
      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version:  | 
            3.1.x
            5.0.x

      - name: Show node version
        run: node --version
        
      - name: Show dotnet version
        run: dotnet --version
        
      - name: Install prebuild
        run: npm i -g prebuild
        
      - name: build & test coreclrhosting
        run: |
          cd coreclr-hosting
          npm ci --build-from-source
          npm version "${GITHUB_REF:11}" --allow-same-version
          prebuild -t 14.16.0 --include-regex "\.(node|a|dll|so|dylib|pdb)$"
          prebuild -t 16.13.1 --include-regex "\.(node|a|dll|so|dylib)$"       
          prebuild -t 14.0.0 -r electron --include-regex "\.(node|a|dll|so|dylib)$"
          prebuild -t 15.0.0 -r electron --include-regex "\.(node|a|dll|so|dylib)$"
          prebuild -t 16.0.0 -r electron --include-regex "\.(node|a|dll|so|dylib)$"
          npm run build-testapp
          npm run mocha
          cd ..

      - name: build electron-blazor-glue
        run: |
          cd electron-blazor-glue
          npm ci
          npm run build-js-glue:release
          cd ..
      
      - uses: xresloader/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: "coreclr-hosting/prebuilds/*"
          tags: true

      - name: build nuget packages
        run: |
          cd NodeHostEnvironment
          dotnet pack -c Release
          cd ../ElectronHostedBlazor
          dotnet pack -c Release


      
