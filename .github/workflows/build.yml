# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-windows:
    # The type of runner that the job will run on
    runs-on: windows-2019
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version:  | 
            3.1.x
            5.0.x
            6.0.x
            8.0.x

      - name: Show node version
        run: node --version
        
      - name: Show dotnet version
        run: dotnet --version
        
      - name: Install prebuild
        run: npm i -g prebuild
        
      - name: build & test coreclrhosting
        run: |
          cd coreclr-hosting
          npm ci --build-from-source
          prebuild -t 14.16.0 --include-regex "\.(node|a|dll|so|dylib|pdb)$"
          prebuild -t 16.13.1 --include-regex "\.(node|a|dll|so|dylib)$"
          prebuild -t 18.14.0 --include-regex "\.(node|a|dll|so|dylib)$"
          prebuild -t 19.0.0 --include-regex "\.(node|a|dll|so|dylib)$"
          prebuild -t 20.0.0 --include-regex "\.(node|a|dll|so|dylib)$"
          prebuild -t 21.0.0 --include-regex "\.(node|a|dll|so|dylib)$"          
          prebuild -t 24.6.1 -r electron --include-regex "\.(node|a|dll|so|dylib)$"
          prebuild -t 25.0.0 -r electron --include-regex "\.(node|a|dll|so|dylib)$"
          prebuild -t 26.0.0 -r electron --include-regex "\.(node|a|dll|so|dylib)$"
          prebuild -t 27.0.0 -r electron --include-regex "\.(node|a|dll|so|dylib)$"
          prebuild -t 28.0.0 -r electron --include-regex "\.(node|a|dll|so|dylib)$"
          prebuild -t 29.0.0 -r electron --include-regex "\.(node|a|dll|so|dylib)$"
          prebuild -t 30.0.0 -r electron --include-regex "\.(node|a|dll|so|dylib)$"
          prebuild -t 31.0.0 -r electron --include-regex "\.(node|a|dll|so|dylib)$"
          prebuild -t 32.0.0 -r electron --include-regex "\.(node|a|dll|so|dylib)$"
          npm run build-testapp
          npm run mocha
          cd ..
      
      - name: build electron-blazor-glue
        run: |
          cd electron-blazor-glue
          npm ci
          npm run build-js-glue:release
          cd ..

      - name: build nuget packages
        run: |
          cd NodeHostEnvironment
          dotnet pack -c Release
          cd ../ElectronHostedBlazor
          dotnet pack -c Release
  
  build-linux:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          
      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version:  | 
            3.1.x
            5.0.x
            6.0.x
            8.0.x

      - name: Show node version
        run: node --version
        
      - name: Show dotnet version
        run: dotnet --version
        
      - name: Install prebuild
        run: npm i -g prebuild
        
      - name: build & test coreclrhosting
        run: |
          cd coreclr-hosting
          npm ci --build-from-source
          prebuild -t 16.13.1 --include-regex "\.(node|a|dll|so|dylib)$"
          prebuild -t 18.14.0 --include-regex "\.(node|a|dll|so|dylib)$"
          prebuild -t 19.0.0 --include-regex "\.(node|a|dll|so|dylib)$"
          prebuild -t 24.6.1 -r electron --include-regex "\.(node|a|dll|so|dylib)$"
          prebuild -t 25.0.0 -r electron --include-regex "\.(node|a|dll|so|dylib)$"
          prebuild -t 26.0.0 -r electron --include-regex "\.(node|a|dll|so|dylib)$"
          prebuild -t 27.0.0 -r electron --include-regex "\.(node|a|dll|so|dylib)$"
          npm run build-testapp
          npm run mocha
          cd ..
      
      - name: build electron-blazor-glue
        run: |
          cd electron-blazor-glue
          npm ci
          npm run build-js-glue:release
          cd ..

      - name: build nuget packages
        run: |
          cd NodeHostEnvironment
          dotnet pack -c Release
          cd ../ElectronHostedBlazor
          dotnet pack -c Release

  build-macos:
    # The type of runner that the job will run on
    runs-on: macos-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3      
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11.0' 
      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          
      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version:  | 
            3.1.x
            5.0.x
            6.0.x
            8.0.x

      - name: Show node version
        run: node --version
        
      - name: Show dotnet version
        run: dotnet --version
        
      - name: Install prebuild
        run: npm i -g prebuild
        
      - name: build & test coreclrhosting
        run: |
          cd coreclr-hosting
          npm ci --build-from-source
          prebuild -t 16.13.1 --include-regex "\.(node|a|dll|so|dylib)$"
          prebuild -t 18.14.0 --include-regex "\.(node|a|dll|so|dylib)$"
          prebuild -t 19.0.0 --include-regex "\.(node|a|dll|so|dylib)$"
          prebuild -t 24.6.1 -r electron --include-regex "\.(node|a|dll|so|dylib)$"
          prebuild -t 25.0.0 -r electron --include-regex "\.(node|a|dll|so|dylib)$"
          prebuild -t 26.0.0 -r electron --include-regex "\.(node|a|dll|so|dylib)$"
          prebuild -t 27.0.0 -r electron --include-regex "\.(node|a|dll|so|dylib)$"
          npm run build-testapp
          npm run mocha
          cd ..

      - name: build electron-blazor-glue
        run: |
          cd electron-blazor-glue
          npm ci
          npm run build-js-glue:release
          cd ..

      - name: build nuget packages
        run: |
          cd NodeHostEnvironment
          dotnet pack -c Release
          cd ../ElectronHostedBlazor
          dotnet pack -c Release


      
