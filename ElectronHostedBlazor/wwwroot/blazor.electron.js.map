{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///C:/Private/nodeclrhost/nodeclrhost/coreclr-hosting/bindings.js","webpack:///C:/Private/nodeclrhost/nodeclrhost/coreclr-hosting/build/Debug/coreclr-hosting.node","webpack:///C:/Private/nodeclrhost/nodeclrhost/coreclr-hosting/build/Release/coreclr-hosting.node","webpack:///../node_modules/@dotnet/jsinterop/dist/Microsoft.JSInterop.js","webpack:///../node_modules/webpack/buildin/module.js","webpack:///./Boot.Electron.ts","webpack:///./BootCommon.ts","webpack:///./Environment.ts","webpack:///./GlobalExports.ts","webpack:///./Rendering/BrowserRenderer.ts","webpack:///./Rendering/ElementReferenceCapture.ts","webpack:///./Rendering/EventDelegator.ts","webpack:///./Rendering/EventFieldInfo.ts","webpack:///./Rendering/EventForDotNet.ts","webpack:///./Rendering/LogicalElements.ts","webpack:///./Rendering/RenderBatch/OutOfProcessRenderBatch.ts","webpack:///./Rendering/RenderBatch/RenderBatch.ts","webpack:///./Rendering/RenderBatch/Utf8Decoder.ts","webpack:///./Rendering/Renderer.ts","webpack:///./Rendering/RendererEventDispatcher.ts","webpack:///./Services/Http.ts","webpack:///./Services/NavigationManager.ts"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;;AAEA;AACA,qBAAqB,mBAAO,CAAC,kGAAoC;AACjE,CAAC;AACD,qBAAqB,mBAAO,CAAC,sGAAsC;AACnE;;AAEA;;;;;;;;;;;;ACRA,mDAAK,4HAA4H,EAAE,WAAW,2I;;;;;;;;;;;;ACA9I,mDAAK,8HAA8H,EAAE,WAAW,6I;;;;;;;;;;;;;ACAnI;AACb;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,gDAAgD,mIAAmI,EAAE,oBAAoB,oIAAoI,EAAE;AAC/U;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,kCAAkC,EAAE;AAC5G,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,6BAA6B,EAAE;AAC3E;AACA;AACA,oBAAoB;AACpB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC,wBAAwB;AACzB,+C;;;;;;;;;;;ACrPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBA,8GAA2B;AAC3B,iEAAyB;AAGzB,4FAAmD;AAEnD,iKAA0F;AAE1F,8EAAiG;AACjG,yIAAyE;AA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","file":"blazor.electron.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./Boot.Electron.ts\");\n","var coreclrHosting;\r\n\r\nif (process.env.DEBUG) {\r\n    coreclrHosting = require('./build/Debug/coreclr-hosting.node');\r\n} else {\r\n    coreclrHosting = require('./build/Release/coreclr-hosting.node');\r\n}\r\n\r\nmodule.exports = coreclrHosting;\r\n","try {global.process.dlopen(module, \"C:\\\\Private\\\\nodeclrhost\\\\nodeclrhost\\\\coreclr-hosting\\\\build\\\\Debug\\\\coreclr-hosting.node\"); } catch(e) {throw new Error('Cannot open ' + \"C:\\\\Private\\\\nodeclrhost\\\\nodeclrhost\\\\coreclr-hosting\\\\build\\\\Debug\\\\coreclr-hosting.node\" + ': ' + e);}","try {global.process.dlopen(module, \"C:\\\\Private\\\\nodeclrhost\\\\nodeclrhost\\\\coreclr-hosting\\\\build\\\\Release\\\\coreclr-hosting.node\"); } catch(e) {throw new Error('Cannot open ' + \"C:\\\\Private\\\\nodeclrhost\\\\nodeclrhost\\\\coreclr-hosting\\\\build\\\\Release\\\\coreclr-hosting.node\" + ': ' + e);}","\"use strict\";\n// This is a single-file self-contained module to avoid the need for a Webpack build\nvar DotNet;\n(function (DotNet) {\n    window.DotNet = DotNet; // Ensure reachable from anywhere\n    var jsonRevivers = [];\n    var pendingAsyncCalls = {};\n    var cachedJSFunctions = {};\n    var nextAsyncCallId = 1; // Start at 1 because zero signals \"no response needed\"\n    var dotNetDispatcher = null;\n    /**\n     * Sets the specified .NET call dispatcher as the current instance so that it will be used\n     * for future invocations.\n     *\n     * @param dispatcher An object that can dispatch calls from JavaScript to a .NET runtime.\n     */\n    function attachDispatcher(dispatcher) {\n        dotNetDispatcher = dispatcher;\n    }\n    DotNet.attachDispatcher = attachDispatcher;\n    /**\n     * Adds a JSON reviver callback that will be used when parsing arguments received from .NET.\n     * @param reviver The reviver to add.\n     */\n    function attachReviver(reviver) {\n        jsonRevivers.push(reviver);\n    }\n    DotNet.attachReviver = attachReviver;\n    /**\n     * Invokes the specified .NET public method synchronously. Not all hosting scenarios support\n     * synchronous invocation, so if possible use invokeMethodAsync instead.\n     *\n     * @param assemblyName The short name (without key/version or .dll extension) of the .NET assembly containing the method.\n     * @param methodIdentifier The identifier of the method to invoke. The method must have a [JSInvokable] attribute specifying this identifier.\n     * @param args Arguments to pass to the method, each of which must be JSON-serializable.\n     * @returns The result of the operation.\n     */\n    function invokeMethod(assemblyName, methodIdentifier) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        return invokePossibleInstanceMethod(assemblyName, methodIdentifier, null, args);\n    }\n    DotNet.invokeMethod = invokeMethod;\n    /**\n     * Invokes the specified .NET public method asynchronously.\n     *\n     * @param assemblyName The short name (without key/version or .dll extension) of the .NET assembly containing the method.\n     * @param methodIdentifier The identifier of the method to invoke. The method must have a [JSInvokable] attribute specifying this identifier.\n     * @param args Arguments to pass to the method, each of which must be JSON-serializable.\n     * @returns A promise representing the result of the operation.\n     */\n    function invokeMethodAsync(assemblyName, methodIdentifier) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        return invokePossibleInstanceMethodAsync(assemblyName, methodIdentifier, null, args);\n    }\n    DotNet.invokeMethodAsync = invokeMethodAsync;\n    function invokePossibleInstanceMethod(assemblyName, methodIdentifier, dotNetObjectId, args) {\n        var dispatcher = getRequiredDispatcher();\n        if (dispatcher.invokeDotNetFromJS) {\n            var argsJson = JSON.stringify(args, argReplacer);\n            var resultJson = dispatcher.invokeDotNetFromJS(assemblyName, methodIdentifier, dotNetObjectId, argsJson);\n            return resultJson ? parseJsonWithRevivers(resultJson) : null;\n        }\n        else {\n            throw new Error('The current dispatcher does not support synchronous calls from JS to .NET. Use invokeMethodAsync instead.');\n        }\n    }\n    function invokePossibleInstanceMethodAsync(assemblyName, methodIdentifier, dotNetObjectId, args) {\n        if (assemblyName && dotNetObjectId) {\n            throw new Error(\"For instance method calls, assemblyName should be null. Received '\" + assemblyName + \"'.\");\n        }\n        var asyncCallId = nextAsyncCallId++;\n        var resultPromise = new Promise(function (resolve, reject) {\n            pendingAsyncCalls[asyncCallId] = { resolve: resolve, reject: reject };\n        });\n        try {\n            var argsJson = JSON.stringify(args, argReplacer);\n            getRequiredDispatcher().beginInvokeDotNetFromJS(asyncCallId, assemblyName, methodIdentifier, dotNetObjectId, argsJson);\n        }\n        catch (ex) {\n            // Synchronous failure\n            completePendingCall(asyncCallId, false, ex);\n        }\n        return resultPromise;\n    }\n    function getRequiredDispatcher() {\n        if (dotNetDispatcher !== null) {\n            return dotNetDispatcher;\n        }\n        throw new Error('No .NET call dispatcher has been set.');\n    }\n    function completePendingCall(asyncCallId, success, resultOrError) {\n        if (!pendingAsyncCalls.hasOwnProperty(asyncCallId)) {\n            throw new Error(\"There is no pending async call with ID \" + asyncCallId + \".\");\n        }\n        var asyncCall = pendingAsyncCalls[asyncCallId];\n        delete pendingAsyncCalls[asyncCallId];\n        if (success) {\n            asyncCall.resolve(resultOrError);\n        }\n        else {\n            asyncCall.reject(resultOrError);\n        }\n    }\n    /**\n     * Receives incoming calls from .NET and dispatches them to JavaScript.\n     */\n    DotNet.jsCallDispatcher = {\n        /**\n         * Finds the JavaScript function matching the specified identifier.\n         *\n         * @param identifier Identifies the globally-reachable function to be returned.\n         * @returns A Function instance.\n         */\n        findJSFunction: findJSFunction,\n        /**\n         * Invokes the specified synchronous JavaScript function.\n         *\n         * @param identifier Identifies the globally-reachable function to invoke.\n         * @param argsJson JSON representation of arguments to be passed to the function.\n         * @returns JSON representation of the invocation result.\n         */\n        invokeJSFromDotNet: function (identifier, argsJson) {\n            var result = findJSFunction(identifier).apply(null, parseJsonWithRevivers(argsJson));\n            return result === null || result === undefined\n                ? null\n                : JSON.stringify(result, argReplacer);\n        },\n        /**\n         * Invokes the specified synchronous or asynchronous JavaScript function.\n         *\n         * @param asyncHandle A value identifying the asynchronous operation. This value will be passed back in a later call to endInvokeJSFromDotNet.\n         * @param identifier Identifies the globally-reachable function to invoke.\n         * @param argsJson JSON representation of arguments to be passed to the function.\n         */\n        beginInvokeJSFromDotNet: function (asyncHandle, identifier, argsJson) {\n            // Coerce synchronous functions into async ones, plus treat\n            // synchronous exceptions the same as async ones\n            var promise = new Promise(function (resolve) {\n                var synchronousResultOrPromise = findJSFunction(identifier).apply(null, parseJsonWithRevivers(argsJson));\n                resolve(synchronousResultOrPromise);\n            });\n            // We only listen for a result if the caller wants to be notified about it\n            if (asyncHandle) {\n                // On completion, dispatch result back to .NET\n                // Not using \"await\" because it codegens a lot of boilerplate\n                promise.then(function (result) { return getRequiredDispatcher().endInvokeJSFromDotNet(asyncHandle, true, JSON.stringify([asyncHandle, true, result], argReplacer)); }, function (error) { return getRequiredDispatcher().endInvokeJSFromDotNet(asyncHandle, false, JSON.stringify([asyncHandle, false, formatError(error)])); });\n            }\n        },\n        /**\n         * Receives notification that an async call from JS to .NET has completed.\n         * @param asyncCallId The identifier supplied in an earlier call to beginInvokeDotNetFromJS.\n         * @param success A flag to indicate whether the operation completed successfully.\n         * @param resultOrExceptionMessage Either the operation result or an error message.\n         */\n        endInvokeDotNetFromJS: function (asyncCallId, success, resultOrExceptionMessage) {\n            var resultOrError = success ? resultOrExceptionMessage : new Error(resultOrExceptionMessage);\n            completePendingCall(parseInt(asyncCallId), success, resultOrError);\n        }\n    };\n    function parseJsonWithRevivers(json) {\n        return json ? JSON.parse(json, function (key, initialValue) {\n            // Invoke each reviver in order, passing the output from the previous reviver,\n            // so that each one gets a chance to transform the value\n            return jsonRevivers.reduce(function (latestValue, reviver) { return reviver(key, latestValue); }, initialValue);\n        }) : null;\n    }\n    function formatError(error) {\n        if (error instanceof Error) {\n            return error.message + \"\\n\" + error.stack;\n        }\n        else {\n            return error ? error.toString() : 'null';\n        }\n    }\n    function findJSFunction(identifier) {\n        if (cachedJSFunctions.hasOwnProperty(identifier)) {\n            return cachedJSFunctions[identifier];\n        }\n        var result = window;\n        var resultIdentifier = 'window';\n        var lastSegmentValue;\n        identifier.split('.').forEach(function (segment) {\n            if (segment in result) {\n                lastSegmentValue = result;\n                result = result[segment];\n                resultIdentifier += '.' + segment;\n            }\n            else {\n                throw new Error(\"Could not find '\" + segment + \"' in '\" + resultIdentifier + \"'.\");\n            }\n        });\n        if (result instanceof Function) {\n            result = result.bind(lastSegmentValue);\n            cachedJSFunctions[identifier] = result;\n            return result;\n        }\n        else {\n            throw new Error(\"The value '\" + resultIdentifier + \"' is not a function.\");\n        }\n    }\n    var DotNetObject = /** @class */ (function () {\n        function DotNetObject(_id) {\n            this._id = _id;\n        }\n        DotNetObject.prototype.invokeMethod = function (methodIdentifier) {\n            var args = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                args[_i - 1] = arguments[_i];\n            }\n            return invokePossibleInstanceMethod(null, methodIdentifier, this._id, args);\n        };\n        DotNetObject.prototype.invokeMethodAsync = function (methodIdentifier) {\n            var args = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                args[_i - 1] = arguments[_i];\n            }\n            return invokePossibleInstanceMethodAsync(null, methodIdentifier, this._id, args);\n        };\n        DotNetObject.prototype.dispose = function () {\n            var promise = invokePossibleInstanceMethodAsync(null, '__Dispose', this._id, null);\n            promise.catch(function (error) { return console.error(error); });\n        };\n        DotNetObject.prototype.serializeAsArg = function () {\n            return { __dotNetObject: this._id };\n        };\n        return DotNetObject;\n    }());\n    var dotNetObjectRefKey = '__dotNetObject';\n    attachReviver(function reviveDotNetObject(key, value) {\n        if (value && typeof value === 'object' && value.hasOwnProperty(dotNetObjectRefKey)) {\n            return new DotNetObject(value.__dotNetObject);\n        }\n        // Unrecognized - let another reviver handle it\n        return value;\n    });\n    function argReplacer(key, value) {\n        return value instanceof DotNetObject ? value.serializeAsArg() : value;\n    }\n})(DotNet || (DotNet = {}));\n//# sourceMappingURL=Microsoft.JSInterop.js.map","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import '@dotnet/jsinterop'; \r\nimport './GlobalExports';\r\nimport * as Environment from './Environment';\r\nimport { getAssemblyNameFromUrl } from './Platform/Url';\r\nimport { renderBatch } from './Rendering/Renderer';\r\nimport { SharedMemoryRenderBatch } from './Rendering/RenderBatch/SharedMemoryRenderBatch';\r\nimport { OutOfProcessRenderBatch } from './Rendering/RenderBatch/OutOfProcessRenderBatch';\r\nimport { Pointer } from './Platform/Platform';\r\nimport { fetchBootConfigAsync, loadEmbeddedResourcesAsync, shouldAutoStart } from './BootCommon';\r\nimport { setEventDispatcher } from './Rendering/RendererEventDispatcher';\r\nimport coreclrhosting = require('coreclr-hosting');\r\n\r\nlet started = false;\r\n\r\nasync function boot(options?: any): Promise<void> {\r\n\r\n  if (started) {\r\n    throw new Error('Blazor has already started.');\r\n  }\r\n  started = true;\r\n\r\n  setEventDispatcher((eventDescriptor, eventArgs) => window['Blazor']._internal.HandleRendererEvent(eventDescriptor, JSON.stringify(eventArgs)));\r\n    //DotNet.invokeMethodAsync('Microsoft.AspNetCore.Blazor', 'DispatchEvent', eventDescriptor, JSON.stringify(eventArgs)));\r\n\r\n  // Configure environment for execution under Mono WebAssembly with shared-memory rendering\r\n  /*const platform = Environment.setPlatform(monoPlatform);\r\n  window['Blazor'].platform = platform;\r\n  window['Blazor']._internal.renderBatch = (browserRendererId: number, batchAddress: Pointer) => {\r\n    renderBatch(browserRendererId, new SharedMemoryRenderBatch(batchAddress));\r\n  };*/\r\n\r\n  // TODO DM 26.08.2019: Navigation is different on trunk compared to preview 8\r\n  // Configure navigation via JS Interop\r\n  /*window['Blazor']._internal.navigationManager.listenForNavigationEvents(async (uri: string, intercepted: boolean): Promise<void> => {\r\n    await DotNet.invokeMethodAsync(\r\n      'Microsoft.AspNetCore.Blazor',\r\n      'NotifyLocationChanged',\r\n      uri,\r\n      intercepted\r\n    );\r\n  });*/\r\n\r\n// DM 21.08.2019: Setting up the renderer\r\nwindow['Blazor']._internal.renderBatch = (browserRendererId: number, batchAddress: ArrayBuffer) => {\r\n  try {\r\n    \r\n  \r\n  var typedArray = new Uint8Array(batchAddress);\r\n  console.info(\"rendering batch of size \" + typedArray.byteLength + \" and first byte \" + typedArray[0]);\r\n  renderBatch(browserRendererId, new OutOfProcessRenderBatch(typedArray));\r\n} catch (error) {\r\n console.error(error);   \r\n}\r\n}\r\n\r\n// DM 21.08.2019: Start the blazor app\r\nconsole.info(\"Running in process \" + process.pid);\r\nconsole.info(\"Starting from \" + __dirname + '/..');\r\nvar result = coreclrhosting.runCoreApp(__dirname + '/..', window['StartupApp']);\r\nconsole.info(\"Main returned: \" + result);\r\n//console.info(window[\"Blazor\"]._internal);\r\n\r\n/*\r\n  // Fetch the boot JSON file\r\n  const bootConfig = await fetchBootConfigAsync();\r\n  const embeddedResourcesPromise = loadEmbeddedResourcesAsync(bootConfig);\r\n\r\n  if (!bootConfig.linkerEnabled) {\r\n    console.info('Blazor is running in dev mode without IL stripping. To make the bundle size significantly smaller, publish the application or see https://go.microsoft.com/fwlink/?linkid=870414');\r\n  }\r\n\r\n  // Determine the URLs of the assemblies we want to load, then begin fetching them all\r\n  const loadAssemblyUrls = [bootConfig.main]\r\n    .concat(bootConfig.assemblyReferences)\r\n    .map(filename => `_framework/_bin/${filename}`);\r\n\r\n  try {\r\n    await platform.start(loadAssemblyUrls);\r\n  } catch (ex) {\r\n    throw new Error(`Failed to start platform. Reason: ${ex}`);\r\n  }\r\n\r\n  // Before we start running .NET code, be sure embedded content resources are all loaded\r\n  await embeddedResourcesPromise;\r\n\r\n  // Start up the application\r\n  const mainAssemblyName = getAssemblyNameFromUrl(bootConfig.main);\r\n  platform.callEntryPoint(mainAssemblyName, bootConfig.entryPoint, []);\r\n  */\r\n}\r\n\r\nwindow['Blazor'].start = boot;\r\nif (shouldAutoStart()) {\r\n  boot();\r\n}\r\n\r\n","export async function fetchBootConfigAsync() {\r\n  // Later we might make the location of this configurable (e.g., as an attribute on the <script>\r\n  // element that's importing this file), but currently there isn't a use case for that.\r\n  const bootConfigResponse = await fetch('_framework/blazor.boot.json', { method: 'Get', credentials: 'include' });\r\n  return bootConfigResponse.json() as Promise<BootJsonData>;\r\n}\r\n\r\nexport function loadEmbeddedResourcesAsync(bootConfig: BootJsonData): Promise<any> {\r\n  const cssLoadingPromises = bootConfig.cssReferences.map(cssReference => {\r\n    const linkElement = document.createElement('link');\r\n    linkElement.rel = 'stylesheet';\r\n    linkElement.href = cssReference;\r\n    return loadResourceFromElement(linkElement);\r\n  });\r\n  const jsLoadingPromises = bootConfig.jsReferences.map(jsReference => {\r\n    const scriptElement = document.createElement('script');\r\n    scriptElement.src = jsReference;\r\n    return loadResourceFromElement(scriptElement);\r\n  });\r\n  return Promise.all(cssLoadingPromises.concat(jsLoadingPromises));\r\n}\r\n\r\nfunction loadResourceFromElement(element: HTMLElement) {\r\n  return new Promise((resolve, reject) => {\r\n    element.onload = resolve;\r\n    element.onerror = reject;\r\n    document.head!.appendChild(element);\r\n  });\r\n}\r\n\r\n// Keep in sync with BootJsonData in Microsoft.AspNetCore.Blazor.Build\r\ninterface BootJsonData {\r\n  main: string;\r\n  entryPoint: string;\r\n  assemblyReferences: string[];\r\n  cssReferences: string[];\r\n  jsReferences: string[];\r\n  linkerEnabled: boolean;\r\n}\r\n\r\n// Tells you if the script was added without <script src=\"...\" autostart=\"false\"></script>\r\nexport function shouldAutoStart() {\r\n  return !!(document &&\r\n    document.currentScript &&\r\n    document.currentScript.getAttribute('autostart') !== 'false');\r\n}\r\n","// Expose an export called 'platform' of the interface type 'Platform',\r\n// so that consumers can be agnostic about which implementation they use.\r\n// Basic alternative to having an actual DI container.\r\nimport { Platform } from './Platform/Platform';\r\n\r\nexport let platform: Platform;\r\n\r\nexport function setPlatform(platformInstance: Platform) {\r\n  platform = platformInstance;\r\n  return platform;\r\n}\r\n","import { navigateTo, internalFunctions as navigationManagerInternalFunctions } from './Services/NavigationManager';\r\nimport { internalFunctions as httpInternalFunctions } from './Services/Http';\r\nimport { attachRootComponentToElement } from './Rendering/Renderer';\r\n\r\n// Make the following APIs available in global scope for invocation from JS\r\nwindow['Blazor'] = {\r\n  navigateTo,\r\n\r\n  _internal: {\r\n    attachRootComponentToElement,\r\n    http: httpInternalFunctions,\r\n    navigationManager: navigationManagerInternalFunctions,\r\n  },\r\n};","import { RenderBatch, ArrayBuilderSegment, RenderTreeEdit, RenderTreeFrame, EditType, FrameType, ArrayValues } from './RenderBatch/RenderBatch';\r\nimport { EventDelegator } from './EventDelegator';\r\nimport { EventForDotNet, UIEventArgs, EventArgsType } from './EventForDotNet';\r\nimport { LogicalElement, PermutationListEntry, toLogicalElement, insertLogicalChild, removeLogicalChild, getLogicalParent, getLogicalChild, createAndInsertLogicalContainer, isSvgElement, getLogicalChildrenArray, getLogicalSiblingEnd, permuteLogicalChildren, getClosestDomElement } from './LogicalElements';\r\nimport { applyCaptureIdToElement } from './ElementReferenceCapture';\r\nimport { EventFieldInfo } from './EventFieldInfo';\r\nimport { dispatchEvent } from './RendererEventDispatcher';\r\nconst selectValuePropname = '_blazorSelectValue';\r\nconst sharedTemplateElemForParsing = document.createElement('template');\r\nconst sharedSvgElemForParsing = document.createElementNS('http://www.w3.org/2000/svg', 'g');\r\nconst preventDefaultEvents: { [eventType: string]: boolean } = { submit: true };\r\nconst rootComponentsPendingFirstRender: { [componentId: number]: LogicalElement } = {};\r\n\r\nexport class BrowserRenderer {\r\n  private eventDelegator: EventDelegator;\r\n\r\n  private childComponentLocations: { [componentId: number]: LogicalElement } = {};\r\n\r\n  private browserRendererId: number;\r\n\r\n  public constructor(browserRendererId: number) {\r\n    this.browserRendererId = browserRendererId;\r\n    this.eventDelegator = new EventDelegator((event, eventHandlerId, eventArgs, eventFieldInfo) => {\r\n      raiseEvent(event, this.browserRendererId, eventHandlerId, eventArgs, eventFieldInfo);\r\n    });\r\n  }\r\n\r\n  public attachRootComponentToLogicalElement(componentId: number, element: LogicalElement): void {\r\n    this.attachComponentToElement(componentId, element);\r\n    rootComponentsPendingFirstRender[componentId] = element;\r\n  }\r\n\r\n  public updateComponent(batch: RenderBatch, componentId: number, edits: ArrayBuilderSegment<RenderTreeEdit>, referenceFrames: ArrayValues<RenderTreeFrame>): void {\r\n    const element = this.childComponentLocations[componentId];\r\n    if (!element) {\r\n      throw new Error(`No element is currently associated with component ${componentId}`);\r\n    }\r\n\r\n    // On the first render for each root component, clear any existing content (e.g., prerendered)\r\n    const rootElementToClear = rootComponentsPendingFirstRender[componentId];\r\n    if (rootElementToClear) {\r\n      const rootElementToClearEnd = getLogicalSiblingEnd(rootElementToClear);\r\n      delete rootComponentsPendingFirstRender[componentId];\r\n\r\n      if (!rootElementToClearEnd) {\r\n        clearElement(rootElementToClear as unknown as Element);\r\n      } else {\r\n        clearBetween(rootElementToClear as unknown as Node, rootElementToClearEnd as unknown as Comment);\r\n      }\r\n    }\r\n\r\n    const ownerDocument = getClosestDomElement(element).ownerDocument;\r\n    const activeElementBefore = ownerDocument && ownerDocument.activeElement;\r\n\r\n    this.applyEdits(batch, componentId, element, 0, edits, referenceFrames);\r\n\r\n    // Try to restore focus in case it was lost due to an element move\r\n    if ((activeElementBefore instanceof HTMLElement) && ownerDocument && ownerDocument.activeElement !== activeElementBefore) {\r\n      activeElementBefore.focus();\r\n    }\r\n  }\r\n\r\n  public disposeComponent(componentId: number) {\r\n    delete this.childComponentLocations[componentId];\r\n  }\r\n\r\n  public disposeEventHandler(eventHandlerId: number) {\r\n    this.eventDelegator.removeListener(eventHandlerId);\r\n  }\r\n\r\n  private attachComponentToElement(componentId: number, element: LogicalElement) {\r\n    this.childComponentLocations[componentId] = element;\r\n  }\r\n\r\n  private applyEdits(batch: RenderBatch, componentId: number, parent: LogicalElement, childIndex: number, edits: ArrayBuilderSegment<RenderTreeEdit>, referenceFrames: ArrayValues<RenderTreeFrame>) {\r\n    let currentDepth = 0;\r\n    let childIndexAtCurrentDepth = childIndex;\r\n    let permutationList: PermutationListEntry[] | undefined;\r\n\r\n    const arrayBuilderSegmentReader = batch.arrayBuilderSegmentReader;\r\n    const editReader = batch.editReader;\r\n    const frameReader = batch.frameReader;\r\n    const editsValues = arrayBuilderSegmentReader.values(edits);\r\n    const editsOffset = arrayBuilderSegmentReader.offset(edits);\r\n    const editsLength = arrayBuilderSegmentReader.count(edits);\r\n    const maxEditIndexExcl = editsOffset + editsLength;\r\n\r\n    for (let editIndex = editsOffset; editIndex < maxEditIndexExcl; editIndex++) {\r\n      const edit = batch.diffReader.editsEntry(editsValues, editIndex);\r\n      const editType = editReader.editType(edit);\r\n      switch (editType) {\r\n        case EditType.prependFrame: {\r\n          const frameIndex = editReader.newTreeIndex(edit);\r\n          const frame = batch.referenceFramesEntry(referenceFrames, frameIndex);\r\n          const siblingIndex = editReader.siblingIndex(edit);\r\n          this.insertFrame(batch, componentId, parent, childIndexAtCurrentDepth + siblingIndex, referenceFrames, frame, frameIndex);\r\n          break;\r\n        }\r\n        case EditType.removeFrame: {\r\n          const siblingIndex = editReader.siblingIndex(edit);\r\n          removeLogicalChild(parent, childIndexAtCurrentDepth + siblingIndex);\r\n          break;\r\n        }\r\n        case EditType.setAttribute: {\r\n          const frameIndex = editReader.newTreeIndex(edit);\r\n          const frame = batch.referenceFramesEntry(referenceFrames, frameIndex);\r\n          const siblingIndex = editReader.siblingIndex(edit);\r\n          const element = getLogicalChild(parent, childIndexAtCurrentDepth + siblingIndex);\r\n          if (element instanceof Element) {\r\n            this.applyAttribute(batch, componentId, element, frame);\r\n          } else {\r\n            throw new Error('Cannot set attribute on non-element child');\r\n          }\r\n          break;\r\n        }\r\n        case EditType.removeAttribute: {\r\n          // Note that we don't have to dispose the info we track about event handlers here, because the\r\n          // disposed event handler IDs are delivered separately (in the 'disposedEventHandlerIds' array)\r\n          const siblingIndex = editReader.siblingIndex(edit);\r\n          const element = getLogicalChild(parent, childIndexAtCurrentDepth + siblingIndex);\r\n          if (element instanceof HTMLElement) {\r\n            const attributeName = editReader.removedAttributeName(edit)!;\r\n            // First try to remove any special property we use for this attribute\r\n            if (!this.tryApplySpecialProperty(batch, element, attributeName, null)) {\r\n              // If that's not applicable, it's a regular DOM attribute so remove that\r\n              element.removeAttribute(attributeName);\r\n            }\r\n          } else {\r\n            throw new Error('Cannot remove attribute from non-element child');\r\n          }\r\n          break;\r\n        }\r\n        case EditType.updateText: {\r\n          const frameIndex = editReader.newTreeIndex(edit);\r\n          const frame = batch.referenceFramesEntry(referenceFrames, frameIndex);\r\n          const siblingIndex = editReader.siblingIndex(edit);\r\n          const textNode = getLogicalChild(parent, childIndexAtCurrentDepth + siblingIndex);\r\n          if (textNode instanceof Text) {\r\n            textNode.textContent = frameReader.textContent(frame);\r\n          } else {\r\n            throw new Error('Cannot set text content on non-text child');\r\n          }\r\n          break;\r\n        }\r\n        case EditType.updateMarkup: {\r\n          const frameIndex = editReader.newTreeIndex(edit);\r\n          const frame = batch.referenceFramesEntry(referenceFrames, frameIndex);\r\n          const siblingIndex = editReader.siblingIndex(edit);\r\n          removeLogicalChild(parent, childIndexAtCurrentDepth + siblingIndex);\r\n          this.insertMarkup(batch, parent, childIndexAtCurrentDepth + siblingIndex, frame);\r\n          break;\r\n        }\r\n        case EditType.stepIn: {\r\n          const siblingIndex = editReader.siblingIndex(edit);\r\n          parent = getLogicalChild(parent, childIndexAtCurrentDepth + siblingIndex);\r\n          currentDepth++;\r\n          childIndexAtCurrentDepth = 0;\r\n          break;\r\n        }\r\n        case EditType.stepOut: {\r\n          parent = getLogicalParent(parent)!;\r\n          currentDepth--;\r\n          childIndexAtCurrentDepth = currentDepth === 0 ? childIndex : 0; // The childIndex is only ever nonzero at zero depth\r\n          break;\r\n        }\r\n        case EditType.permutationListEntry: {\r\n          permutationList = permutationList || [];\r\n          permutationList.push({\r\n            fromSiblingIndex: childIndexAtCurrentDepth + editReader.siblingIndex(edit),\r\n            toSiblingIndex: childIndexAtCurrentDepth + editReader.moveToSiblingIndex(edit),\r\n          });\r\n          break;\r\n        }\r\n        case EditType.permutationListEnd: {\r\n          permuteLogicalChildren(parent, permutationList!);\r\n          permutationList = undefined;\r\n          break;\r\n        }\r\n        default: {\r\n          const unknownType: never = editType; // Compile-time verification that the switch was exhaustive\r\n          throw new Error(`Unknown edit type: ${unknownType}`);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private insertFrame(batch: RenderBatch, componentId: number, parent: LogicalElement, childIndex: number, frames: ArrayValues<RenderTreeFrame>, frame: RenderTreeFrame, frameIndex: number): number {\r\n    const frameReader = batch.frameReader;\r\n    const frameType = frameReader.frameType(frame);\r\n    switch (frameType) {\r\n      case FrameType.element:\r\n        this.insertElement(batch, componentId, parent, childIndex, frames, frame, frameIndex);\r\n        return 1;\r\n      case FrameType.text:\r\n        this.insertText(batch, parent, childIndex, frame);\r\n        return 1;\r\n      case FrameType.attribute:\r\n        throw new Error('Attribute frames should only be present as leading children of element frames.');\r\n      case FrameType.component:\r\n        this.insertComponent(batch, parent, childIndex, frame);\r\n        return 1;\r\n      case FrameType.region:\r\n        return this.insertFrameRange(batch, componentId, parent, childIndex, frames, frameIndex + 1, frameIndex + frameReader.subtreeLength(frame));\r\n      case FrameType.elementReferenceCapture:\r\n        if (parent instanceof Element) {\r\n          applyCaptureIdToElement(parent, frameReader.elementReferenceCaptureId(frame)!);\r\n          return 0; // A \"capture\" is a child in the diff, but has no node in the DOM\r\n        } else {\r\n          throw new Error('Reference capture frames can only be children of element frames.');\r\n        }\r\n      case FrameType.markup:\r\n        this.insertMarkup(batch, parent, childIndex, frame);\r\n        return 1;\r\n      default:\r\n        const unknownType: never = frameType; // Compile-time verification that the switch was exhaustive\r\n        throw new Error(`Unknown frame type: ${unknownType}`);\r\n    }\r\n  }\r\n\r\n  private insertElement(batch: RenderBatch, componentId: number, parent: LogicalElement, childIndex: number, frames: ArrayValues<RenderTreeFrame>, frame: RenderTreeFrame, frameIndex: number) {\r\n    const frameReader = batch.frameReader;\r\n    const tagName = frameReader.elementName(frame)!;\r\n    const newDomElementRaw = tagName === 'svg' || isSvgElement(parent) ?\r\n      document.createElementNS('http://www.w3.org/2000/svg', tagName) :\r\n      document.createElement(tagName);\r\n    const newElement = toLogicalElement(newDomElementRaw);\r\n    insertLogicalChild(newDomElementRaw, parent, childIndex);\r\n\r\n    // Apply attributes\r\n    const descendantsEndIndexExcl = frameIndex + frameReader.subtreeLength(frame);\r\n    for (let descendantIndex = frameIndex + 1; descendantIndex < descendantsEndIndexExcl; descendantIndex++) {\r\n      const descendantFrame = batch.referenceFramesEntry(frames, descendantIndex);\r\n      if (frameReader.frameType(descendantFrame) === FrameType.attribute) {\r\n        this.applyAttribute(batch, componentId, newDomElementRaw, descendantFrame);\r\n      } else {\r\n        // As soon as we see a non-attribute child, all the subsequent child frames are\r\n        // not attributes, so bail out and insert the remnants recursively\r\n        this.insertFrameRange(batch, componentId, newElement, 0, frames, descendantIndex, descendantsEndIndexExcl);\r\n        break;\r\n      }\r\n    }\r\n\r\n    // We handle setting 'value' on a <select> in two different ways:\r\n    // [1] When inserting a corresponding <option>, in case you're dynamically adding options\r\n    // [2] After we finish inserting the <select>, in case the descendant options are being\r\n    //     added as an opaque markup block rather than individually\r\n    // Right here we implement [2]\r\n    if (newDomElementRaw instanceof HTMLSelectElement && selectValuePropname in newDomElementRaw) {\r\n      const selectValue = newDomElementRaw[selectValuePropname];\r\n      newDomElementRaw.value = selectValue;\r\n      delete newDomElementRaw[selectValuePropname];\r\n    }\r\n  }\r\n\r\n  private insertComponent(batch: RenderBatch, parent: LogicalElement, childIndex: number, frame: RenderTreeFrame) {\r\n    const containerElement = createAndInsertLogicalContainer(parent, childIndex);\r\n\r\n    // All we have to do is associate the child component ID with its location. We don't actually\r\n    // do any rendering here, because the diff for the child will appear later in the render batch.\r\n    const childComponentId = batch.frameReader.componentId(frame);\r\n    this.attachComponentToElement(childComponentId, containerElement);\r\n  }\r\n\r\n  private insertText(batch: RenderBatch, parent: LogicalElement, childIndex: number, textFrame: RenderTreeFrame) {\r\n    const textContent = batch.frameReader.textContent(textFrame)!;\r\n    const newTextNode = document.createTextNode(textContent);\r\n    insertLogicalChild(newTextNode, parent, childIndex);\r\n  }\r\n\r\n  private insertMarkup(batch: RenderBatch, parent: LogicalElement, childIndex: number, markupFrame: RenderTreeFrame) {\r\n    const markupContainer = createAndInsertLogicalContainer(parent, childIndex);\r\n\r\n    const markupContent = batch.frameReader.markupContent(markupFrame);\r\n    const parsedMarkup = parseMarkup(markupContent, isSvgElement(parent));\r\n    let logicalSiblingIndex = 0;\r\n    while (parsedMarkup.firstChild) {\r\n      insertLogicalChild(parsedMarkup.firstChild, markupContainer, logicalSiblingIndex++);\r\n    }\r\n  }\r\n\r\n  private applyAttribute(batch: RenderBatch, componentId: number, toDomElement: Element, attributeFrame: RenderTreeFrame) {\r\n    const frameReader = batch.frameReader;\r\n    const attributeName = frameReader.attributeName(attributeFrame)!;\r\n    const browserRendererId = this.browserRendererId;\r\n    const eventHandlerId = frameReader.attributeEventHandlerId(attributeFrame);\r\n\r\n    if (eventHandlerId) {\r\n      const firstTwoChars = attributeName.substring(0, 2);\r\n      const eventName = attributeName.substring(2);\r\n      if (firstTwoChars !== 'on' || !eventName) {\r\n        throw new Error(`Attribute has nonzero event handler ID, but attribute name '${attributeName}' does not start with 'on'.`);\r\n      }\r\n      this.eventDelegator.setListener(toDomElement, eventName, eventHandlerId, componentId);\r\n      return;\r\n    }\r\n\r\n    // First see if we have special handling for this attribute\r\n    if (!this.tryApplySpecialProperty(batch, toDomElement, attributeName, attributeFrame)) {\r\n      // If not, treat it as a regular string-valued attribute\r\n      toDomElement.setAttribute(\r\n        attributeName,\r\n        frameReader.attributeValue(attributeFrame)!\r\n      );\r\n    }\r\n  }\r\n\r\n  private tryApplySpecialProperty(batch: RenderBatch, element: Element, attributeName: string, attributeFrame: RenderTreeFrame | null) {\r\n    switch (attributeName) {\r\n      case 'value':\r\n        return this.tryApplyValueProperty(batch, element, attributeFrame);\r\n      case 'checked':\r\n        return this.tryApplyCheckedProperty(batch, element, attributeFrame);\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n\r\n  private tryApplyValueProperty(batch: RenderBatch, element: Element, attributeFrame: RenderTreeFrame | null) {\r\n    // Certain elements have built-in behaviour for their 'value' property\r\n    const frameReader = batch.frameReader;\r\n    switch (element.tagName) {\r\n      case 'INPUT':\r\n      case 'SELECT':\r\n      case 'TEXTAREA': {\r\n        const value = attributeFrame ? frameReader.attributeValue(attributeFrame) : null;\r\n        (element as any).value = value;\r\n\r\n        if (element.tagName === 'SELECT') {\r\n          // <select> is special, in that anything we write to .value will be lost if there\r\n          // isn't yet a matching <option>. To maintain the expected behavior no matter the\r\n          // element insertion/update order, preserve the desired value separately so\r\n          // we can recover it when inserting any matching <option> or after inserting an\r\n          // entire markup block of descendants.\r\n          element[selectValuePropname] = value;\r\n        }\r\n        return true;\r\n      }\r\n      case 'OPTION': {\r\n        const value = attributeFrame ? frameReader.attributeValue(attributeFrame) : null;\r\n        if (value) {\r\n          element.setAttribute('value', value);\r\n        } else {\r\n          element.removeAttribute('value');\r\n        }\r\n        // See above for why we have this special handling for <select>/<option>\r\n        // Note that this is only one of the two cases where we set the value on a <select>\r\n        const selectElem = this.findClosestAncestorSelectElement(element);\r\n        if (selectElem && (selectValuePropname in selectElem) && selectElem[selectValuePropname] === value) {\r\n          this.tryApplyValueProperty(batch, selectElem, attributeFrame);\r\n          delete selectElem[selectValuePropname];\r\n        }\r\n        return true;\r\n      }\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n\r\n  private tryApplyCheckedProperty(batch: RenderBatch, element: Element, attributeFrame: RenderTreeFrame | null) {\r\n    // Certain elements have built-in behaviour for their 'checked' property\r\n    if (element.tagName === 'INPUT') {\r\n      const value = attributeFrame ? batch.frameReader.attributeValue(attributeFrame) : null;\r\n      (element as any).checked = value !== null;\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private findClosestAncestorSelectElement(element: Element | null) {\r\n    while (element) {\r\n      if (element instanceof HTMLSelectElement) {\r\n        return element;\r\n      } else {\r\n        element = element.parentElement;\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  private insertFrameRange(batch: RenderBatch, componentId: number, parent: LogicalElement, childIndex: number, frames: ArrayValues<RenderTreeFrame>, startIndex: number, endIndexExcl: number): number {\r\n    const origChildIndex = childIndex;\r\n    for (let index = startIndex; index < endIndexExcl; index++) {\r\n      const frame = batch.referenceFramesEntry(frames, index);\r\n      const numChildrenInserted = this.insertFrame(batch, componentId, parent, childIndex, frames, frame, index);\r\n      childIndex += numChildrenInserted;\r\n\r\n      // Skip over any descendants, since they are already dealt with recursively\r\n      index += countDescendantFrames(batch, frame);\r\n    }\r\n\r\n    return (childIndex - origChildIndex); // Total number of children inserted\r\n  }\r\n}\r\n\r\nexport interface ComponentDescriptor {\r\n  start: Node;\r\n  end: Node;\r\n}\r\n\r\nexport interface EventDescriptor {\r\n  browserRendererId: number;\r\n  eventHandlerId: number;\r\n  eventArgsType: EventArgsType;\r\n  eventFieldInfo: EventFieldInfo | null;\r\n}\r\n\r\nfunction parseMarkup(markup: string, isSvg: boolean) {\r\n  if (isSvg) {\r\n    sharedSvgElemForParsing.innerHTML = markup || ' ';\r\n    return sharedSvgElemForParsing;\r\n  } else {\r\n    sharedTemplateElemForParsing.innerHTML = markup || ' ';\r\n    return sharedTemplateElemForParsing.content;\r\n  }\r\n}\r\n\r\nfunction countDescendantFrames(batch: RenderBatch, frame: RenderTreeFrame): number {\r\n  const frameReader = batch.frameReader;\r\n  switch (frameReader.frameType(frame)) {\r\n    // The following frame types have a subtree length. Other frames may use that memory slot\r\n    // to mean something else, so we must not read it. We should consider having nominal subtypes\r\n    // of RenderTreeFramePointer that prevent access to non-applicable fields.\r\n    case FrameType.component:\r\n    case FrameType.element:\r\n    case FrameType.region:\r\n      return frameReader.subtreeLength(frame) - 1;\r\n    default:\r\n      return 0;\r\n  }\r\n}\r\n\r\nfunction raiseEvent(\r\n  event: Event,\r\n  browserRendererId: number,\r\n  eventHandlerId: number,\r\n  eventArgs: EventForDotNet<UIEventArgs>,\r\n  eventFieldInfo: EventFieldInfo | null\r\n): void {\r\n  if (preventDefaultEvents[event.type]) {\r\n    event.preventDefault();\r\n  }\r\n\r\n  const eventDescriptor = {\r\n    browserRendererId,\r\n    eventHandlerId,\r\n    eventArgsType: eventArgs.type,\r\n    eventFieldInfo: eventFieldInfo,\r\n  };\r\n\r\n  dispatchEvent(eventDescriptor, eventArgs.data);\r\n}\r\n\r\nfunction clearElement(element: Element) {\r\n  let childNode: Node | null;\r\n  while (childNode = element.firstChild) {\r\n    element.removeChild(childNode);\r\n  }\r\n}\r\n\r\nfunction clearBetween(start: Node, end: Node): void {\r\n  const logicalParent = getLogicalParent(start as unknown as LogicalElement);\r\n  if (!logicalParent) {\r\n    throw new Error(\"Can't clear between nodes. The start node does not have a logical parent.\");\r\n  }\r\n  const children = getLogicalChildrenArray(logicalParent);\r\n  const removeStart = children.indexOf(start as unknown as LogicalElement) + 1;\r\n  const endIndex = children.indexOf(end as unknown as LogicalElement);\r\n\r\n  // We remove the end component comment from the DOM as we don't need it after this point.\r\n  for (let i = removeStart; i <= endIndex; i++) {\r\n    removeLogicalChild(logicalParent, removeStart);\r\n  }\r\n\r\n  // We sanitize the start comment by removing all the information from it now that we don't need it anymore\r\n  // as it adds noise to the DOM.\r\n  start.textContent = '!';\r\n}\r\n","export function applyCaptureIdToElement(element: Element, referenceCaptureId: string) {\n  element.setAttribute(getCaptureIdAttributeName(referenceCaptureId), '');\n}\n\nfunction getElementByCaptureId(referenceCaptureId: string) {\n  const selector = `[${getCaptureIdAttributeName(referenceCaptureId)}]`;\n  return document.querySelector(selector);\n}\n\nfunction getCaptureIdAttributeName(referenceCaptureId: string) {\n  return `_bl_${referenceCaptureId}`;\n}\n\n// Support receiving ElementRef instances as args in interop calls\nconst elementRefKey = '__internalId'; // Keep in sync with ElementRef.cs\nDotNet.attachReviver((key, value) => {\n  if (value && typeof value === 'object' && value.hasOwnProperty(elementRefKey) && typeof value[elementRefKey] === 'string') {\n    return getElementByCaptureId(value[elementRefKey]);\n  } else {\n    return value;\n  }\n});\n","import { EventForDotNet, UIEventArgs } from './EventForDotNet';\nimport { EventFieldInfo } from './EventFieldInfo';\n\nconst nonBubblingEvents = toLookup([\n  'abort',\n  'blur',\n  'change',\n  'error',\n  'focus',\n  'load',\n  'loadend',\n  'loadstart',\n  'mouseenter',\n  'mouseleave',\n  'progress',\n  'reset',\n  'scroll',\n  'submit',\n  'unload',\n  'DOMNodeInsertedIntoDocument',\n  'DOMNodeRemovedFromDocument',\n]);\n\nexport interface OnEventCallback {\n  (event: Event, eventHandlerId: number, eventArgs: EventForDotNet<UIEventArgs>, eventFieldInfo: EventFieldInfo | null): void;\n}\n\n// Responsible for adding/removing the eventInfo on an expando property on DOM elements, and\n// calling an EventInfoStore that deals with registering/unregistering the underlying delegated\n// event listeners as required (and also maps actual events back to the given callback).\nexport class EventDelegator {\n  private static nextEventDelegatorId = 0;\n\n  private eventsCollectionKey: string;\n\n  private eventInfoStore: EventInfoStore;\n\n  constructor(private onEvent: OnEventCallback) {\n    const eventDelegatorId = ++EventDelegator.nextEventDelegatorId;\n    this.eventsCollectionKey = `_blazorEvents_${eventDelegatorId}`;\n    this.eventInfoStore = new EventInfoStore(this.onGlobalEvent.bind(this));\n  }\n\n  public setListener(element: Element, eventName: string, eventHandlerId: number, renderingComponentId: number) {\n    // Ensure we have a place to store event info for this element\n    let infoForElement: EventHandlerInfosForElement = element[this.eventsCollectionKey];\n    if (!infoForElement) {\n      infoForElement = element[this.eventsCollectionKey] = {};\n    }\n\n    if (infoForElement.hasOwnProperty(eventName)) {\n      // We can cheaply update the info on the existing object and don't need any other housekeeping\n      const oldInfo = infoForElement[eventName];\n      this.eventInfoStore.update(oldInfo.eventHandlerId, eventHandlerId);\n    } else {\n      // Go through the whole flow which might involve registering a new global handler\n      const newInfo = { element, eventName, eventHandlerId, renderingComponentId };\n      this.eventInfoStore.add(newInfo);\n      infoForElement[eventName] = newInfo;\n    }\n  }\n\n  public removeListener(eventHandlerId: number) {\n    // This method gets called whenever the .NET-side code reports that a certain event handler\n    // has been disposed. However we will already have disposed the info about that handler if\n    // the eventHandlerId for the (element,eventName) pair was replaced during diff application.\n    const info = this.eventInfoStore.remove(eventHandlerId);\n    if (info) {\n      // Looks like this event handler wasn't already disposed\n      // Remove the associated data from the DOM element\n      const element = info.element;\n      if (element.hasOwnProperty(this.eventsCollectionKey)) {\n        const elementEventInfos: EventHandlerInfosForElement = element[this.eventsCollectionKey];\n        delete elementEventInfos[info.eventName];\n        if (Object.getOwnPropertyNames(elementEventInfos).length === 0) {\n          delete element[this.eventsCollectionKey];\n        }\n      }\n    }\n  }\n\n  private onGlobalEvent(evt: Event) {\n    if (!(evt.target instanceof Element)) {\n      return;\n    }\n\n    // Scan up the element hierarchy, looking for any matching registered event handlers\n    let candidateElement = evt.target as Element | null;\n    let eventArgs: EventForDotNet<UIEventArgs> | null = null; // Populate lazily\n    const eventIsNonBubbling = nonBubblingEvents.hasOwnProperty(evt.type);\n    while (candidateElement) {\n      if (candidateElement.hasOwnProperty(this.eventsCollectionKey)) {\n        const handlerInfos: EventHandlerInfosForElement = candidateElement[this.eventsCollectionKey];\n        if (handlerInfos.hasOwnProperty(evt.type)) {\n          // We are going to raise an event for this element, so prepare info needed by the .NET code\n          if (!eventArgs) {\n            eventArgs = EventForDotNet.fromDOMEvent(evt);\n          }\n\n          const handlerInfo = handlerInfos[evt.type];\n          const eventFieldInfo = EventFieldInfo.fromEvent(handlerInfo.renderingComponentId, evt);\n          this.onEvent(evt, handlerInfo.eventHandlerId, eventArgs, eventFieldInfo);\n        }\n      }\n\n      candidateElement = eventIsNonBubbling ? null : candidateElement.parentElement;\n    }\n  }\n}\n\n// Responsible for adding and removing the global listener when the number of listeners\n// for a given event name changes between zero and nonzero\nclass EventInfoStore {\n  private infosByEventHandlerId: { [eventHandlerId: number]: EventHandlerInfo } = {};\n\n  private countByEventName: { [eventName: string]: number } = {};\n\n  constructor(private globalListener: EventListener) {\n  }\n\n  public add(info: EventHandlerInfo) {\n    if (this.infosByEventHandlerId[info.eventHandlerId]) {\n      // Should never happen, but we want to know if it does\n      throw new Error(`Event ${info.eventHandlerId} is already tracked`);\n    }\n\n    this.infosByEventHandlerId[info.eventHandlerId] = info;\n\n    const eventName = info.eventName;\n    if (this.countByEventName.hasOwnProperty(eventName)) {\n      this.countByEventName[eventName]++;\n    } else {\n      this.countByEventName[eventName] = 1;\n\n      // To make delegation work with non-bubbling events, register a 'capture' listener.\n      // We preserve the non-bubbling behavior by only dispatching such events to the targeted element.\n      const useCapture = nonBubblingEvents.hasOwnProperty(eventName);\n      document.addEventListener(eventName, this.globalListener, useCapture);\n    }\n  }\n\n  public update(oldEventHandlerId: number, newEventHandlerId: number) {\n    if (this.infosByEventHandlerId.hasOwnProperty(newEventHandlerId)) {\n      // Should never happen, but we want to know if it does\n      throw new Error(`Event ${newEventHandlerId} is already tracked`);\n    }\n\n    // Since we're just updating the event handler ID, there's no need to update the global counts\n    const info = this.infosByEventHandlerId[oldEventHandlerId];\n    delete this.infosByEventHandlerId[oldEventHandlerId];\n    info.eventHandlerId = newEventHandlerId;\n    this.infosByEventHandlerId[newEventHandlerId] = info;\n  }\n\n  public remove(eventHandlerId: number): EventHandlerInfo {\n    const info = this.infosByEventHandlerId[eventHandlerId];\n    if (info) {\n      delete this.infosByEventHandlerId[eventHandlerId];\n\n      const eventName = info.eventName;\n      if (--this.countByEventName[eventName] === 0) {\n        delete this.countByEventName[eventName];\n        document.removeEventListener(eventName, this.globalListener);\n      }\n    }\n\n    return info;\n  }\n}\n\ninterface EventHandlerInfosForElement {\n  // Although we *could* track multiple event handlers per (element, eventName) pair\n  // (since they have distinct eventHandlerId values), there's no point doing so because\n  // our programming model is that you declare event handlers as attributes. An element\n  // can only have one attribute with a given name, hence only one event handler with\n  // that name at any one time.\n  // So to keep things simple, only track one EventHandlerInfo per (element, eventName)\n  [eventName: string]: EventHandlerInfo;\n}\n\ninterface EventHandlerInfo {\n  element: Element;\n  eventName: string;\n  eventHandlerId: number;\n\n  // The component whose tree includes the event handler attribute frame, *not* necessarily the\n  // same component that will be re-rendered after the event is handled (since we re-render the\n  // component that supplied the delegate, not the one that rendered the event handler frame)\n  renderingComponentId: number;\n}\n\nfunction toLookup(items: string[]): { [key: string]: boolean } {\n  const result = {};\n  items.forEach(value => {\n    result[value] = true;\n  });\n  return result;\n}\n","export class EventFieldInfo {\n    constructor(public componentId: number, public fieldValue: string | boolean) {\n    }\n\n    public static fromEvent(componentId: number, event: Event): EventFieldInfo | null {\n        const elem = event.target;\n        if (elem instanceof Element) {\n            const fieldData = getFormFieldData(elem);\n            if (fieldData) {\n                return new EventFieldInfo(componentId, fieldData.value);\n            }\n        }\n\n        // This event isn't happening on a form field that we can reverse-map back to some incoming attribute\n        return null;\n    }\n}\n\nfunction getFormFieldData(elem: Element) {\n    // The logic in here should be the inverse of the logic in BrowserRenderer's tryApplySpecialProperty.\n    // That is, we're doing the reverse mapping, starting from an HTML property and reconstructing which\n    // \"special\" attribute would have been mapped to that property.\n    if (elem instanceof HTMLInputElement) {\n        return (elem.type && elem.type.toLowerCase() === 'checkbox')\n            ? { value: elem.checked }\n            : { value: elem.value };\n    }\n\n    if (elem instanceof HTMLSelectElement || elem instanceof HTMLTextAreaElement) {\n        return { value: elem.value };\n    }\n\n    return null;\n}\n","export class EventForDotNet<TData extends UIEventArgs> {\n  constructor(public readonly type: EventArgsType, public readonly data: TData) {\n  }\n\n  static fromDOMEvent(event: Event): EventForDotNet<UIEventArgs> {\n    const element = event.target as Element;\n    switch (event.type) {\n\n      case 'input':\n      case 'change': {\n        const targetIsCheckbox = isCheckbox(element);\n        const newValue = targetIsCheckbox ? !!element['checked'] : element['value'];\n        return new EventForDotNet<UIChangeEventArgs>('change', { type: event.type, value: newValue });\n      }\n\n      case 'copy':\n      case 'cut':\n      case 'paste':\n        return new EventForDotNet<UIClipboardEventArgs>('clipboard', { type: event.type });\n\n      case 'drag':\n      case 'dragend':\n      case 'dragenter':\n      case 'dragleave':\n      case 'dragover':\n      case 'dragstart':\n      case 'drop':\n        return new EventForDotNet<UIDragEventArgs>('drag', parseDragEvent(event));\n\n      case 'focus':\n      case 'blur':\n      case 'focusin':\n      case 'focusout':\n        return new EventForDotNet<UIFocusEventArgs>('focus', { type: event.type });\n\n      case 'keydown':\n      case 'keyup':\n      case 'keypress':\n        return new EventForDotNet<UIKeyboardEventArgs>('keyboard', parseKeyboardEvent(<KeyboardEvent>event));\n\n      case 'contextmenu':\n      case 'click':\n      case 'mouseover':\n      case 'mouseout':\n      case 'mousemove':\n      case 'mousedown':\n      case 'mouseup':\n      case 'dblclick':\n        return new EventForDotNet<UIMouseEventArgs>('mouse', parseMouseEvent(<MouseEvent>event));\n\n      case 'error':\n        return new EventForDotNet<UIErrorEventArgs>('error', parseErrorEvent(<ErrorEvent>event));\n\n      case 'loadstart':\n      case 'timeout':\n      case 'abort':\n      case 'load':\n      case 'loadend':\n      case 'progress':\n        return new EventForDotNet<UIProgressEventArgs>('progress', parseProgressEvent(<ProgressEvent>event));\n\n      case 'touchcancel':\n      case 'touchend':\n      case 'touchmove':\n      case 'touchenter':\n      case 'touchleave':\n      case 'touchstart':\n        return new EventForDotNet<UITouchEventArgs>('touch', parseTouchEvent(<TouchEvent>event));\n\n      case 'gotpointercapture':\n      case 'lostpointercapture':\n      case 'pointercancel':\n      case 'pointerdown':\n      case 'pointerenter':\n      case 'pointerleave':\n      case 'pointermove':\n      case 'pointerout':\n      case 'pointerover':\n      case 'pointerup':\n        return new EventForDotNet<UIPointerEventArgs>('pointer', parsePointerEvent(<PointerEvent>event));\n\n      case 'wheel':\n      case 'mousewheel':\n        return new EventForDotNet<UIWheelEventArgs>('wheel', parseWheelEvent(<WheelEvent>event));\n\n      default:\n        return new EventForDotNet<UIEventArgs>('unknown', { type: event.type });\n    }\n  }\n}\n\nfunction parseDragEvent(event: any) {\n  return {\n    ...parseMouseEvent(event),\n    dataTransfer: event.dataTransfer,\n\n  };\n}\n\nfunction parseWheelEvent(event: WheelEvent) {\n  return {\n    ...parseMouseEvent(event),\n    deltaX: event.deltaX,\n    deltaY: event.deltaY,\n    deltaZ: event.deltaZ,\n    deltaMode: event.deltaMode,\n  };\n}\n\nfunction parseErrorEvent(event: ErrorEvent) {\n  return {\n    type: event.type,\n    message: event.message,\n    filename: event.filename,\n    lineno: event.lineno,\n    colno: event.colno,\n  };\n}\n\nfunction parseProgressEvent(event: ProgressEvent) {\n  return {\n    type: event.type,\n    lengthComputable: event.lengthComputable,\n    loaded: event.loaded,\n    total: event.total,\n  };\n}\n\nfunction parseTouchEvent(event: TouchEvent) {\n\n  function parseTouch(touchList: TouchList) {\n    const touches: UITouchPoint[] = [];\n\n    for (let i = 0; i < touchList.length; i++) {\n      const touch = touchList[i];\n      touches.push({\n        identifier: touch.identifier,\n        clientX: touch.clientX,\n        clientY: touch.clientY,\n        screenX: touch.screenX,\n        screenY: touch.screenY,\n        pageX: touch.pageX,\n        pageY: touch.pageY,\n      });\n    }\n    return touches;\n  }\n\n  return {\n    type: event.type,\n    detail: event.detail,\n    touches: parseTouch(event.touches),\n    targetTouches: parseTouch(event.targetTouches),\n    changedTouches: parseTouch(event.changedTouches),\n    ctrlKey: event.ctrlKey,\n    shiftKey: event.shiftKey,\n    altKey: event.altKey,\n    metaKey: event.metaKey,\n  };\n}\n\nfunction parseKeyboardEvent(event: KeyboardEvent) {\n  return {\n    type: event.type,\n    key: event.key,\n    code: event.code,\n    location: event.location,\n    repeat: event.repeat,\n    ctrlKey: event.ctrlKey,\n    shiftKey: event.shiftKey,\n    altKey: event.altKey,\n    metaKey: event.metaKey,\n  };\n}\n\nfunction parsePointerEvent(event: PointerEvent) {\n  return {\n    ...parseMouseEvent(event),\n    pointerId: event.pointerId,\n    width: event.width,\n    height: event.height,\n    pressure: event.pressure,\n    tiltX: event.tiltX,\n    tiltY: event.tiltY,\n    pointerType: event.pointerType,\n    isPrimary: event.isPrimary,\n  };\n}\n\nfunction parseMouseEvent(event: MouseEvent) {\n  return {\n    type: event.type,\n    detail: event.detail,\n    screenX: event.screenX,\n    screenY: event.screenY,\n    clientX: event.clientX,\n    clientY: event.clientY,\n    button: event.button,\n    buttons: event.buttons,\n    ctrlKey: event.ctrlKey,\n    shiftKey: event.shiftKey,\n    altKey: event.altKey,\n    metaKey: event.metaKey,\n  };\n}\n\nfunction isCheckbox(element: Element | null) {\n  return element && element.tagName === 'INPUT' && element.getAttribute('type') === 'checkbox';\n}\n\n// The following interfaces must be kept in sync with the UIEventArgs C# classes\n\nexport type EventArgsType = 'change' | 'clipboard' | 'drag' | 'error' | 'focus' | 'keyboard' | 'mouse' | 'pointer' | 'progress' | 'touch' | 'unknown' | 'wheel';\n\nexport interface UIEventArgs {\n  type: string;\n}\n\ninterface UIChangeEventArgs extends UIEventArgs {\n  value: string | boolean;\n}\n\ninterface UIClipboardEventArgs extends UIEventArgs {\n}\n\ninterface UIDragEventArgs extends UIEventArgs {\n  detail: number;\n  dataTransfer: UIDataTransfer;\n  screenX: number;\n  screenY: number;\n  clientX: number;\n  clientY: number;\n  button: number;\n  buttons: number;\n  ctrlKey: boolean;\n  shiftKey: boolean;\n  altKey: boolean;\n  metaKey: boolean;\n}\n\ninterface UIDataTransfer {\n  dropEffect: string;\n  effectAllowed: string;\n  files: string[];\n  items: UIDataTransferItem[];\n  types: string[];\n}\n\ninterface UIDataTransferItem {\n  kind: string;\n  type: string;\n}\n\ninterface UIErrorEventArgs extends UIEventArgs {\n  message: string;\n  filename: string;\n  lineno: number;\n  colno: number;\n\n  // omitting 'error' here since we'd have to serialize it, and it's not clear we will want to\n  // do that. https://developer.mozilla.org/en-US/docs/Web/API/ErrorEvent\n}\n\ninterface UIFocusEventArgs extends UIEventArgs {\n}\n\ninterface UIKeyboardEventArgs extends UIEventArgs {\n  key: string;\n  code: string;\n  location: number;\n  repeat: boolean;\n  ctrlKey: boolean;\n  shiftKey: boolean;\n  altKey: boolean;\n  metaKey: boolean;\n}\n\ninterface UIMouseEventArgs extends UIEventArgs {\n  detail: number;\n  screenX: number;\n  screenY: number;\n  clientX: number;\n  clientY: number;\n  button: number;\n  buttons: number;\n  ctrlKey: boolean;\n  shiftKey: boolean;\n  altKey: boolean;\n  metaKey: boolean;\n}\n\ninterface UIPointerEventArgs extends UIMouseEventArgs {\n  pointerId: number;\n  width: number;\n  height: number;\n  pressure: number;\n  tiltX: number;\n  tiltY: number;\n  pointerType: string;\n  isPrimary: boolean;\n}\n\ninterface UIProgressEventArgs extends UIEventArgs {\n  lengthComputable: boolean;\n  loaded: number;\n  total: number;\n}\n\ninterface UITouchEventArgs extends UIEventArgs {\n  detail: number;\n  touches: UITouchPoint[];\n  targetTouches: UITouchPoint[];\n  changedTouches: UITouchPoint[];\n  ctrlKey: boolean;\n  shiftKey: boolean;\n  altKey: boolean;\n  metaKey: boolean;\n}\n\ninterface UITouchPoint {\n  identifier: number;\n  screenX: number;\n  screenY: number;\n  clientX: number;\n  clientY: number;\n  pageX: number;\n  pageY: number;\n}\n\ninterface UIWheelEventArgs extends UIMouseEventArgs {\n  deltaX: number;\n  deltaY: number;\n  deltaZ: number;\n  deltaMode: number;\n}\n","/*\r\n  A LogicalElement plays the same role as an Element instance from the point of view of the\r\n  API consumer. Inserting and removing logical elements updates the browser DOM just the same.\r\n\r\n  The difference is that, unlike regular DOM mutation APIs, the LogicalElement APIs don't use\r\n  the underlying DOM structure as the data storage for the element hierarchy. Instead, the\r\n  LogicalElement APIs take care of tracking hierarchical relationships separately. The point\r\n  of this is to permit a logical tree structure in which parent/child relationships don't\r\n  have to be materialized in terms of DOM element parent/child relationships. And the reason\r\n  why we want that is so that hierarchies of Blazor components can be tracked even when those\r\n  components' render output need not be a single literal DOM element.\r\n\r\n  Consumers of the API don't need to know about the implementation, but how it's done is:\r\n  - Each LogicalElement is materialized in the DOM as either:\r\n    - A Node instance, for actual Node instances inserted using 'insertLogicalChild' or\r\n      for Element instances promoted to LogicalElement via 'toLogicalElement'\r\n    - A Comment instance, for 'logical container' instances inserted using 'createAndInsertLogicalContainer'\r\n  - Then, on that instance (i.e., the Node or Comment), we store an array of 'logical children'\r\n    instances, e.g.,\r\n      [firstChild, secondChild, thirdChild, ...]\r\n    ... plus we store a reference to the 'logical parent' (if any)\r\n  - The 'logical children' array means we can look up in O(1):\r\n    - The number of logical children (not currently implemented because not required, but trivial)\r\n    - The logical child at any given index\r\n  - Whenever a logical child is added or removed, we update the parent's array of logical children\r\n*/\r\n\r\nconst logicalChildrenPropname = createSymbolOrFallback('_blazorLogicalChildren');\r\nconst logicalParentPropname = createSymbolOrFallback('_blazorLogicalParent');\r\nconst logicalEndSiblingPropname = createSymbolOrFallback('_blazorLogicalEnd');\r\n\r\nexport function toLogicalRootCommentElement(start: Comment, end: Comment): LogicalElement {\r\n  // Now that we support start/end comments as component delimiters we are going to be setting up\r\n  // adding the components rendered output as siblings of the start/end tags (between).\r\n  // For that to work, we need to appropriately configure the parent element to be a logical element\r\n  // with all their children being the child elements.\r\n  // For example, imagine you have\r\n  // <app>\r\n  // <div><p>Static content</p></div>\r\n  // <!-- start component\r\n  // <!-- end component\r\n  // <footer>Some other content</footer>\r\n  // <app>\r\n  // We want the parent element to be something like\r\n  // *app\r\n  // |- *div\r\n  // |- *component\r\n  // |- *footer\r\n  if (!start.parentNode) {\r\n    throw new Error(`Comment not connected to the DOM ${start.textContent}`);\r\n  }\r\n\r\n  const parent = start.parentNode;\r\n  const parentLogicalElement = toLogicalElement(parent, /* allow existing contents */ true);\r\n  const children = getLogicalChildrenArray(parentLogicalElement);\r\n  Array.from(parent.childNodes).forEach(n => children.push(n as unknown as LogicalElement));\r\n  start[logicalParentPropname] = parentLogicalElement;\r\n  // We might not have an end comment in the case of non-prerendered components.\r\n  if (end) {\r\n    start[logicalEndSiblingPropname] = end;\r\n    toLogicalElement(end, /* allowExistingcontents */ true);\r\n  }\r\n  return toLogicalElement(start, /* allowExistingContents */ true);\r\n}\r\n\r\nexport function toLogicalElement(element: Node, allowExistingContents?: boolean): LogicalElement {\r\n  // Normally it's good to assert that the element has started empty, because that's the usual\r\n  // situation and we probably have a bug if it's not. But for the element that contain prerendered\r\n  // root components, we want to let them keep their content until we replace it.\r\n  if (element.childNodes.length > 0 && !allowExistingContents) {\r\n    throw new Error('New logical elements must start empty, or allowExistingContents must be true');\r\n  }\r\n\r\n  element[logicalChildrenPropname] = [];\r\n  return element as unknown as LogicalElement;\r\n}\r\n\r\nexport function createAndInsertLogicalContainer(parent: LogicalElement, childIndex: number): LogicalElement {\r\n  const containerElement = document.createComment('!');\r\n  insertLogicalChild(containerElement, parent, childIndex);\r\n  return containerElement as any as LogicalElement;\r\n}\r\n\r\nexport function insertLogicalChild(child: Node, parent: LogicalElement, childIndex: number) {\r\n  const childAsLogicalElement = child as any as LogicalElement;\r\n  if (child instanceof Comment) {\r\n    const existingGrandchildren = getLogicalChildrenArray(childAsLogicalElement);\r\n    if (existingGrandchildren && getLogicalChildrenArray(childAsLogicalElement).length > 0) {\r\n      // There's nothing to stop us implementing support for this scenario, and it's not difficult\r\n      // (after inserting 'child' itself, also iterate through its logical children and physically\r\n      // put them as following-siblings in the DOM). However there's no scenario that requires it\r\n      // presently, so if we did implement it there'd be no good way to have tests for it.\r\n      throw new Error('Not implemented: inserting non-empty logical container');\r\n    }\r\n  }\r\n\r\n  if (getLogicalParent(childAsLogicalElement)) {\r\n    // Likewise, we could easily support this scenario too (in this 'if' block, just splice\r\n    // out 'child' from the logical children array of its previous logical parent by using\r\n    // Array.prototype.indexOf to determine its previous sibling index).\r\n    // But again, since there's not currently any scenario that would use it, we would not\r\n    // have any test coverage for such an implementation.\r\n    throw new Error('Not implemented: moving existing logical children');\r\n  }\r\n\r\n  const newSiblings = getLogicalChildrenArray(parent);\r\n  if (childIndex < newSiblings.length) {\r\n    // Insert\r\n    const nextSibling = newSiblings[childIndex] as any as Node;\r\n    nextSibling.parentNode!.insertBefore(child, nextSibling);\r\n    newSiblings.splice(childIndex, 0, childAsLogicalElement);\r\n  } else {\r\n    // Append\r\n    appendDomNode(child, parent);\r\n    newSiblings.push(childAsLogicalElement);\r\n  }\r\n\r\n  childAsLogicalElement[logicalParentPropname] = parent;\r\n  if (!(logicalChildrenPropname in childAsLogicalElement)) {\r\n    childAsLogicalElement[logicalChildrenPropname] = [];\r\n  }\r\n}\r\n\r\nexport function removeLogicalChild(parent: LogicalElement, childIndex: number) {\r\n  const childrenArray = getLogicalChildrenArray(parent);\r\n  const childToRemove = childrenArray.splice(childIndex, 1)[0];\r\n\r\n  // If it's a logical container, also remove its descendants\r\n  if (childToRemove instanceof Comment) {\r\n    const grandchildrenArray = getLogicalChildrenArray(childToRemove);\r\n    while (grandchildrenArray.length > 0) {\r\n      removeLogicalChild(childToRemove, 0);\r\n    }\r\n  }\r\n\r\n  // Finally, remove the node itself\r\n  const domNodeToRemove = childToRemove as any as Node;\r\n  domNodeToRemove.parentNode!.removeChild(domNodeToRemove);\r\n}\r\n\r\nexport function getLogicalParent(element: LogicalElement): LogicalElement | null {\r\n  return (element[logicalParentPropname] as LogicalElement) || null;\r\n}\r\n\r\nexport function getLogicalSiblingEnd(element: LogicalElement): LogicalElement | null {\r\n  return (element[logicalEndSiblingPropname] as LogicalElement) || null;\r\n}\r\n\r\nexport function getLogicalChild(parent: LogicalElement, childIndex: number): LogicalElement {\r\n  return getLogicalChildrenArray(parent)[childIndex];\r\n}\r\n\r\nexport function isSvgElement(element: LogicalElement) {\r\n  return getClosestDomElement(element).namespaceURI === 'http://www.w3.org/2000/svg';\r\n}\r\n\r\nexport function getLogicalChildrenArray(element: LogicalElement) {\r\n  return element[logicalChildrenPropname] as LogicalElement[];\r\n}\r\n\r\nexport function permuteLogicalChildren(parent: LogicalElement, permutationList: PermutationListEntry[]) {\r\n  // The permutationList must represent a valid permutation, i.e., the list of 'from' indices\r\n  // is distinct, and the list of 'to' indices is a permutation of it. The algorithm here\r\n  // relies on that assumption.\r\n\r\n  // Each of the phases here has to happen separately, because each one is designed not to\r\n  // interfere with the indices or DOM entries used by subsequent phases.\r\n\r\n  // Phase 1: track which nodes we will move\r\n  const siblings = getLogicalChildrenArray(parent);\r\n  permutationList.forEach((listEntry: PermutationListEntryWithTrackingData) => {\r\n    listEntry.moveRangeStart = siblings[listEntry.fromSiblingIndex];\r\n    listEntry.moveRangeEnd = findLastDomNodeInRange(listEntry.moveRangeStart);\r\n  });\r\n\r\n  // Phase 2: insert markers\r\n  permutationList.forEach((listEntry: PermutationListEntryWithTrackingData) => {\r\n    const marker = listEntry.moveToBeforeMarker = document.createComment('marker');\r\n    const insertBeforeNode = siblings[listEntry.toSiblingIndex + 1] as any as Node;\r\n    if (insertBeforeNode) {\r\n      insertBeforeNode.parentNode!.insertBefore(marker, insertBeforeNode);\r\n    } else {\r\n      appendDomNode(marker, parent);\r\n    }\r\n  });\r\n\r\n  // Phase 3: move descendants & remove markers\r\n  permutationList.forEach((listEntry: PermutationListEntryWithTrackingData) => {\r\n    const insertBefore = listEntry.moveToBeforeMarker!;\r\n    const parentDomNode = insertBefore.parentNode!;\r\n    const elementToMove = listEntry.moveRangeStart!;\r\n    const moveEndNode = listEntry.moveRangeEnd!;\r\n    let nextToMove = elementToMove as any as Node | null;\r\n    while (nextToMove) {\r\n      const nextNext = nextToMove.nextSibling;\r\n      parentDomNode.insertBefore(nextToMove, insertBefore);\r\n\r\n      if (nextToMove === moveEndNode) {\r\n        break;\r\n      } else {\r\n        nextToMove = nextNext;\r\n      }\r\n    }\r\n\r\n    parentDomNode.removeChild(insertBefore);\r\n  });\r\n\r\n  // Phase 4: update siblings index\r\n  permutationList.forEach((listEntry: PermutationListEntryWithTrackingData) => {\r\n    siblings[listEntry.toSiblingIndex] = listEntry.moveRangeStart!;\r\n  });\r\n}\r\n\r\nexport function getClosestDomElement(logicalElement: LogicalElement) {\r\n  if (logicalElement instanceof Element) {\r\n    return logicalElement;\r\n  } else if (logicalElement instanceof Comment) {\r\n    return logicalElement.parentNode! as Element;\r\n  } else {\r\n    throw new Error('Not a valid logical element');\r\n  }\r\n}\r\n\r\nexport interface PermutationListEntry {\r\n  fromSiblingIndex: number,\r\n  toSiblingIndex: number,\r\n}\r\n\r\ninterface PermutationListEntryWithTrackingData extends PermutationListEntry {\r\n  // These extra properties are used internally when processing the permutation list\r\n  moveRangeStart?: LogicalElement,\r\n  moveRangeEnd?: Node,\r\n  moveToBeforeMarker?: Node,\r\n}\r\n\r\nfunction getLogicalNextSibling(element: LogicalElement): LogicalElement | null {\r\n  const siblings = getLogicalChildrenArray(getLogicalParent(element)!);\r\n  const siblingIndex = Array.prototype.indexOf.call(siblings, element);\r\n  return siblings[siblingIndex + 1] || null;\r\n}\r\n\r\nfunction appendDomNode(child: Node, parent: LogicalElement) {\r\n  // This function only puts 'child' into the DOM in the right place relative to 'parent'\r\n  // It does not update the logical children array of anything\r\n  if (parent instanceof Element) {\r\n    parent.appendChild(child);\r\n  } else if (parent instanceof Comment) {\r\n    const parentLogicalNextSibling = getLogicalNextSibling(parent) as any as Node;\r\n    if (parentLogicalNextSibling) {\r\n      // Since the parent has a logical next-sibling, its appended child goes right before that\r\n      parentLogicalNextSibling.parentNode!.insertBefore(child, parentLogicalNextSibling);\r\n    } else {\r\n      // Since the parent has no logical next-sibling, keep recursing upwards until we find\r\n      // a logical ancestor that does have a next-sibling or is a physical element.\r\n      appendDomNode(child, getLogicalParent(parent)!);\r\n    }\r\n  } else {\r\n    // Should never happen\r\n    throw new Error(`Cannot append node because the parent is not a valid logical element. Parent: ${parent}`);\r\n  }\r\n}\r\n\r\n// Returns the final node (in depth-first evaluation order) that is a descendant of the logical element.\r\n// As such, the entire subtree is between 'element' and 'findLastDomNodeInRange(element)' inclusive.\r\nfunction findLastDomNodeInRange(element: LogicalElement) {\r\n  if (element instanceof Element) {\r\n    return element;\r\n  }\r\n\r\n  const nextSibling = getLogicalNextSibling(element);\r\n  if (nextSibling) {\r\n    // Simple case: not the last logical sibling, so take the node before the next sibling\r\n    return (nextSibling as any as Node).previousSibling;\r\n  } else {\r\n    // Harder case: there's no logical next-sibling, so recurse upwards until we find\r\n    // a logical ancestor that does have one, or a physical element\r\n    const logicalParent = getLogicalParent(element)!;\r\n    return logicalParent instanceof Element\r\n      ? logicalParent.lastChild\r\n      : findLastDomNodeInRange(logicalParent);\r\n  }\r\n}\r\n\r\nfunction createSymbolOrFallback(fallback: string): symbol | string {\r\n  return typeof Symbol === 'function' ? Symbol() : fallback;\r\n}\r\n\r\n// Nominal type to represent a logical element without needing to allocate any object for instances\r\nexport interface LogicalElement { LogicalElement__DO_NOT_IMPLEMENT: any }\r\n","import { RenderBatch, ArrayRange, RenderTreeDiff, ArrayValues, RenderTreeEdit, EditType, FrameType, RenderTreeFrame, RenderTreeDiffReader, RenderTreeFrameReader, RenderTreeEditReader, ArrayRangeReader, ArrayBuilderSegmentReader, ArrayBuilderSegment } from './RenderBatch';\nimport { decodeUtf8 } from './Utf8Decoder';\n\nconst updatedComponentsEntryLength = 4; // Each is a single int32 giving the location of the data\nconst referenceFramesEntryLength = 20; // 1 int for frame type, then 16 bytes for type-specific data\nconst disposedComponentIdsEntryLength = 4; // Each is an int32 giving the ID\nconst disposedEventHandlerIdsEntryLength = 8; // Each is an int64 giving the ID\nconst editsEntryLength = 16; // 4 ints\nconst stringTableEntryLength = 4; // Each is an int32 giving the string data location, or -1 for null\nconst uint64HighPartShift = Math.pow(2, 32);\nconst maxSafeNumberHighPart = Math.pow(2, 21) - 1; // The high-order int32 from Number.MAX_SAFE_INTEGER\n\nexport class OutOfProcessRenderBatch implements RenderBatch {\n  constructor(private batchData: Uint8Array) {\n    const stringReader = new OutOfProcessStringReader(batchData);\n\n    this.arrayRangeReader = new OutOfProcessArrayRangeReader(batchData);\n    this.arrayBuilderSegmentReader = new OutOfProcessArrayBuilderSegmentReader(batchData);\n    this.diffReader = new OutOfProcessRenderTreeDiffReader(batchData);\n    this.editReader = new OutOfProcessRenderTreeEditReader(batchData, stringReader);\n    this.frameReader = new OutOfProcessRenderTreeFrameReader(batchData, stringReader);\n  }\n\n  updatedComponents(): ArrayRange<RenderTreeDiff> {\n    return readInt32LE(this.batchData, this.batchData.length - 20); // 5th-from-last int32\n  }\n\n  referenceFrames(): ArrayRange<RenderTreeFrame> {\n    return readInt32LE(this.batchData, this.batchData.length - 16); // 4th-from-last int32\n  }\n\n  disposedComponentIds(): ArrayRange<number> {\n    return readInt32LE(this.batchData, this.batchData.length - 12); // 3rd-from-last int32\n  }\n\n  disposedEventHandlerIds(): ArrayRange<number> {\n    return readInt32LE(this.batchData, this.batchData.length - 8); // 2th-from-last int32\n  }\n\n  updatedComponentsEntry(values: ArrayValues<RenderTreeDiff>, index: number): RenderTreeDiff {\n    const tableEntryPos = (values as any) + index * updatedComponentsEntryLength;\n    return readInt32LE(this.batchData, tableEntryPos);\n  }\n\n  referenceFramesEntry(values: ArrayValues<RenderTreeFrame>, index: number): RenderTreeFrame {\n    return (values as any) + index * referenceFramesEntryLength as any;\n  }\n\n  disposedComponentIdsEntry(values: ArrayValues<number>, index: number): number {\n    const entryPos = (values as any) + index * disposedComponentIdsEntryLength;\n    return readInt32LE(this.batchData, entryPos);\n  }\n\n  disposedEventHandlerIdsEntry(values: ArrayValues<number>, index: number): number {\n    const entryPos = (values as any) + index * disposedEventHandlerIdsEntryLength;\n    return readUint64LE(this.batchData, entryPos);\n  }\n\n  diffReader: RenderTreeDiffReader;\n\n  editReader: RenderTreeEditReader;\n\n  frameReader: RenderTreeFrameReader;\n\n  arrayRangeReader: ArrayRangeReader;\n\n  arrayBuilderSegmentReader: ArrayBuilderSegmentReader;\n}\n\nclass OutOfProcessRenderTreeDiffReader implements RenderTreeDiffReader {\n  constructor(private batchDataUint8: Uint8Array) {\n  }\n\n  componentId(diff: RenderTreeDiff) {\n    // First int32 is componentId\n    return readInt32LE(this.batchDataUint8, diff as any);\n  }\n\n  edits(diff: RenderTreeDiff) {\n    // Entries data starts after the componentId (which is a 4-byte int)\n    return (diff as any + 4);\n  }\n\n  editsEntry(values: ArrayValues<RenderTreeEdit>, index: number) {\n    return (values as any) + index * editsEntryLength;\n  }\n}\n\nclass OutOfProcessRenderTreeEditReader implements RenderTreeEditReader {\n  constructor(private batchDataUint8: Uint8Array, private stringReader: OutOfProcessStringReader) {\n  }\n\n  editType(edit: RenderTreeEdit) {\n    return readInt32LE(this.batchDataUint8, edit as any); // 1st int\n  }\n\n  siblingIndex(edit: RenderTreeEdit) {\n    return readInt32LE(this.batchDataUint8, edit as any + 4); // 2nd int\n  }\n\n  newTreeIndex(edit: RenderTreeEdit) {\n    return readInt32LE(this.batchDataUint8, edit as any + 8); // 3rd int\n  }\n\n  moveToSiblingIndex(edit: RenderTreeEdit) {\n    return readInt32LE(this.batchDataUint8, edit as any + 8); // 3rd int\n  }\n\n  removedAttributeName(edit: RenderTreeEdit) {\n    const stringIndex = readInt32LE(this.batchDataUint8, edit as any + 12); // 4th int\n    return this.stringReader.readString(stringIndex);\n  }\n}\n\nclass OutOfProcessRenderTreeFrameReader implements RenderTreeFrameReader {\n  constructor(private batchDataUint8: Uint8Array, private stringReader: OutOfProcessStringReader) {\n  }\n\n  // For render frames, the 2nd-4th ints have different meanings depending on frameType.\n  // It's the caller's responsibility not to evaluate properties that aren't applicable to the frameType.\n\n  frameType(frame: RenderTreeFrame) {\n    return readInt32LE(this.batchDataUint8, frame as any); // 1st int\n  }\n\n  subtreeLength(frame: RenderTreeFrame) {\n    return readInt32LE(this.batchDataUint8, frame as any + 4); // 2nd int\n  }\n\n  elementReferenceCaptureId(frame: RenderTreeFrame) {\n    const stringIndex = readInt32LE(this.batchDataUint8, frame as any + 4); // 2nd int\n    return this.stringReader.readString(stringIndex);\n  }\n\n  componentId(frame: RenderTreeFrame) {\n    return readInt32LE(this.batchDataUint8, frame as any + 8); // 3rd int\n  }\n\n  elementName(frame: RenderTreeFrame) {\n    const stringIndex = readInt32LE(this.batchDataUint8, frame as any + 8); // 3rd int\n    return this.stringReader.readString(stringIndex);\n  }\n\n  textContent(frame: RenderTreeFrame) {\n    const stringIndex = readInt32LE(this.batchDataUint8, frame as any + 4); // 2nd int\n    return this.stringReader.readString(stringIndex);\n  }\n\n  markupContent(frame: RenderTreeFrame) {\n    const stringIndex = readInt32LE(this.batchDataUint8, frame as any + 4); // 2nd int\n    return this.stringReader.readString(stringIndex)!;\n  }\n\n  attributeName(frame: RenderTreeFrame) {\n    const stringIndex = readInt32LE(this.batchDataUint8, frame as any + 4); // 2nd int\n    return this.stringReader.readString(stringIndex);\n  }\n\n  attributeValue(frame: RenderTreeFrame) {\n    const stringIndex = readInt32LE(this.batchDataUint8, frame as any + 8); // 3rd int\n    return this.stringReader.readString(stringIndex);\n  }\n\n  attributeEventHandlerId(frame: RenderTreeFrame) {\n    return readUint64LE(this.batchDataUint8, frame as any + 12); // Bytes 12-19\n  }\n}\n\nclass OutOfProcessStringReader {\n  private stringTableStartIndex: number;\n\n  constructor(private batchDataUint8: Uint8Array) {\n    // Final int gives start position of the string table\n    this.stringTableStartIndex = readInt32LE(batchDataUint8, batchDataUint8.length - 4);\n  }\n\n  readString(index: number): string | null {\n    if (index === -1) { // Special value encodes 'null'\n      return null;\n    } else {\n      const stringTableEntryPos = readInt32LE(this.batchDataUint8, this.stringTableStartIndex + index * stringTableEntryLength);\n\n      // By default, .NET's BinaryWriter gives LEB128-length-prefixed UTF-8 data.\n      // This is convenient enough to decode in JavaScript.\n      const numUtf8Bytes = readLEB128(this.batchDataUint8, stringTableEntryPos);\n      const charsStart = stringTableEntryPos + numLEB128Bytes(numUtf8Bytes);\n      const utf8Data = new Uint8Array(\n        this.batchDataUint8.buffer,\n        this.batchDataUint8.byteOffset + charsStart,\n        numUtf8Bytes\n      );\n      return decodeUtf8(utf8Data);\n    }\n  }\n}\n\nclass OutOfProcessArrayRangeReader implements ArrayRangeReader {\n  constructor(private batchDataUint8: Uint8Array) {\n  }\n\n  count<T>(arrayRange: ArrayRange<T>) {\n    // First int is count\n    return readInt32LE(this.batchDataUint8, arrayRange as any);\n  }\n\n  values<T>(arrayRange: ArrayRange<T>) {\n    // Entries data starts after the 'count' int (i.e., after 4 bytes)\n    return arrayRange as any + 4;\n  }\n}\n\nclass OutOfProcessArrayBuilderSegmentReader implements ArrayBuilderSegmentReader {\n  constructor(private batchDataUint8: Uint8Array) {\n  }\n\n  offset<T>(arrayBuilderSegment: ArrayBuilderSegment<T>) {\n    // Not used by the out-of-process representation of RenderBatch data.\n    // This only exists on the ArrayBuilderSegmentReader for the shared-memory representation.\n    return 0;\n  }\n\n  count<T>(arrayBuilderSegment: ArrayBuilderSegment<T>) {\n    // First int is count\n    return readInt32LE(this.batchDataUint8, arrayBuilderSegment as any);\n  }\n\n  values<T>(arrayBuilderSegment: ArrayBuilderSegment<T>): ArrayValues<T> {\n    // Entries data starts after the 'count' int (i.e., after 4 bytes)\n    return arrayBuilderSegment as any + 4;\n  }\n}\n\nfunction readInt32LE(buffer: Uint8Array, position: number): any {\n  return (buffer[position])\n    | (buffer[position + 1] << 8)\n    | (buffer[position + 2] << 16)\n    | (buffer[position + 3] << 24);\n}\n\nfunction readUint32LE(buffer: Uint8Array, position: number): any {\n  return (buffer[position])\n    + (buffer[position + 1] << 8)\n    + (buffer[position + 2] << 16)\n    + ((buffer[position + 3] << 24) >>> 0); // The >>> 0 coerces the value to unsigned\n}\n\nfunction readUint64LE(buffer: Uint8Array, position: number): any {\n  // This cannot be done using bit-shift operators in JavaScript, because\n  // those all implicitly convert to int32\n  const highPart = readUint32LE(buffer, position + 4);\n  if (highPart > maxSafeNumberHighPart) {\n    throw new Error(`Cannot read uint64 with high order part ${highPart}, because the result would exceed Number.MAX_SAFE_INTEGER.`);\n  }\n\n  return (highPart * uint64HighPartShift) + readUint32LE(buffer, position);\n}\n\nfunction readLEB128(buffer: Uint8Array, position: number) {\n  let result = 0;\n  let shift = 0;\n  for (let index = 0; index < 4; index++) {\n    const byte = buffer[position + index];\n    result |= (byte & 127) << shift;\n    if (byte < 128) {\n      break;\n    }\n    shift += 7;\n  }\n  return result;\n}\n\nfunction numLEB128Bytes(value: number) {\n  return value < 128 ? 1\n    : value < 16384 ? 2\n      : value < 2097152 ? 3 : 4;\n}\n","export interface RenderBatch {\n  updatedComponents(): ArrayRange<RenderTreeDiff>;\n  referenceFrames(): ArrayRange<RenderTreeFrame>;\n  disposedComponentIds(): ArrayRange<number>;\n  disposedEventHandlerIds(): ArrayRange<number>;\n\n  updatedComponentsEntry(values: ArrayValues<RenderTreeDiff>, index: number): RenderTreeDiff;\n  referenceFramesEntry(values: ArrayValues<RenderTreeFrame>, index: number): RenderTreeFrame;\n  disposedComponentIdsEntry(values: ArrayValues<number>, index: number): number;\n  disposedEventHandlerIdsEntry(values: ArrayValues<number>, index: number): number;\n\n  diffReader: RenderTreeDiffReader;\n  editReader: RenderTreeEditReader;\n  frameReader: RenderTreeFrameReader;\n  arrayRangeReader: ArrayRangeReader;\n  arrayBuilderSegmentReader: ArrayBuilderSegmentReader;\n}\n\nexport interface ArrayRangeReader {\n  count<T>(arrayRange: ArrayRange<T>): number;\n  values<T>(arrayRange: ArrayRange<T>): ArrayValues<T>;\n}\n\nexport interface ArrayBuilderSegmentReader {\n  offset<T>(arrayBuilderSegment: ArrayBuilderSegment<T>): number;\n  count<T>(arrayBuilderSegment: ArrayBuilderSegment<T>): number;\n  values<T>(arrayBuilderSegment: ArrayBuilderSegment<T>): ArrayValues<T>;\n}\n\nexport interface RenderTreeDiffReader {\n  componentId(diff: RenderTreeDiff): number;\n  edits(diff: RenderTreeDiff): ArrayBuilderSegment<RenderTreeEdit>;\n  editsEntry(values: ArrayValues<RenderTreeEdit>, index: number): RenderTreeEdit;\n}\n\nexport interface RenderTreeEditReader {\n  editType(edit: RenderTreeEdit): EditType;\n  siblingIndex(edit: RenderTreeEdit): number;\n  newTreeIndex(edit: RenderTreeEdit): number;\n  moveToSiblingIndex(edit: RenderTreeEdit): number;\n  removedAttributeName(edit: RenderTreeEdit): string | null;\n}\n\nexport interface RenderTreeFrameReader {\n  frameType(frame: RenderTreeFrame): FrameType;\n  subtreeLength(frame: RenderTreeFrame): number;\n  elementReferenceCaptureId(frame: RenderTreeFrame): string | null;\n  componentId(frame: RenderTreeFrame): number;\n  elementName(frame: RenderTreeFrame): string | null;\n  textContent(frame: RenderTreeFrame): string | null;\n  markupContent(frame: RenderTreeFrame): string;\n  attributeName(frame: RenderTreeFrame): string | null;\n  attributeValue(frame: RenderTreeFrame): string | null;\n  attributeEventHandlerId(frame: RenderTreeFrame): number;\n}\n\nexport interface ArrayRange<T> { ArrayRange__DO_NOT_IMPLEMENT: any }\nexport interface ArrayBuilderSegment<T> { ArrayBuilderSegment__DO_NOT_IMPLEMENT: any }\nexport interface ArrayValues<T> { ArrayValues__DO_NOT_IMPLEMENT: any }\n\nexport interface RenderTreeDiff { RenderTreeDiff__DO_NOT_IMPLEMENT: any }\nexport interface RenderTreeFrame { RenderTreeFrame__DO_NOT_IMPLEMENT: any }\nexport interface RenderTreeEdit { RenderTreeEdit__DO_NOT_IMPLEMENT: any }\n\nexport enum EditType {\n  // The values must be kept in sync with the .NET equivalent in RenderTreeEditType.cs\n  prependFrame = 1,\n  removeFrame = 2,\n  setAttribute = 3,\n  removeAttribute = 4,\n  updateText = 5,\n  stepIn = 6,\n  stepOut = 7,\n  updateMarkup = 8,\n  permutationListEntry = 9,\n  permutationListEnd = 10,\n}\n\nexport enum FrameType {\n  // The values must be kept in sync with the .NET equivalent in RenderTreeFrameType.cs\n  element = 1,\n  text = 2,\n  attribute = 3,\n  component = 4,\n  region = 5,\n  elementReferenceCapture = 6,\n  markup = 8,\n}\n","const nativeDecoder = typeof TextDecoder === 'function'\r\n  ? new TextDecoder('utf-8')\r\n  : null;\r\n\r\n/*export const decodeUtf8: (bytes: Uint8Array) => string\r\n  = nativeDecoder ? nativeDecoder.decode.bind(nativeDecoder) : decodeImpl;*/\r\n\r\nexport const decodeUtf8: (bytes: Uint8Array) => string\r\n  = decodeImpl;\r\n/* !\r\nLogic in decodeImpl is derived from fast-text-encoding\r\nhttps://github.com/samthor/fast-text-encoding\r\n\r\nLicense for fast-text-encoding: Apache 2.0\r\nhttps://github.com/samthor/fast-text-encoding/blob/master/LICENSE\r\n*/\r\n\r\nfunction decodeImpl(bytes: Uint8Array): string {\r\n  let pos = 0;\r\n  const len = bytes.length;\r\n  const out: number[] = [];\r\n  const substrings: string[] = [];\r\n\r\n  while (pos < len) {\r\n    const byte1 = bytes[pos++];\r\n    if (byte1 === 0) {\r\n      break; // NULL\r\n    }\r\n\r\n    if ((byte1 & 0x80) === 0) { // 1-byte\r\n      out.push(byte1);\r\n    } else if ((byte1 & 0xe0) === 0xc0) { // 2-byte\r\n      const byte2 = bytes[pos++] & 0x3f;\r\n      out.push(((byte1 & 0x1f) << 6) | byte2);\r\n    } else if ((byte1 & 0xf0) === 0xe0) {\r\n      const byte2 = bytes[pos++] & 0x3f;\r\n      const byte3 = bytes[pos++] & 0x3f;\r\n      out.push(((byte1 & 0x1f) << 12) | (byte2 << 6) | byte3);\r\n    } else if ((byte1 & 0xf8) === 0xf0) {\r\n      const byte2 = bytes[pos++] & 0x3f;\r\n      const byte3 = bytes[pos++] & 0x3f;\r\n      const byte4 = bytes[pos++] & 0x3f;\r\n\r\n      // this can be > 0xffff, so possibly generate surrogates\r\n      let codepoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0c) | (byte3 << 0x06) | byte4;\r\n      if (codepoint > 0xffff) {\r\n        // codepoint &= ~0x10000;\r\n        codepoint -= 0x10000;\r\n        out.push((codepoint >>> 10) & 0x3ff | 0xd800);\r\n        codepoint = 0xdc00 | codepoint & 0x3ff;\r\n      }\r\n      out.push(codepoint);\r\n    } else {\r\n      // FIXME: we're ignoring this\r\n    }\r\n\r\n    // As a workaround for https://github.com/samthor/fast-text-encoding/issues/1,\r\n    // make sure the 'out' array never gets too long. When it reaches a limit, we\r\n    // stringify what we have so far and append to a list of outputs.\r\n    if (out.length > 1024) {\r\n      substrings.push(String.fromCharCode.apply(null, out));\r\n      out.length = 0;\r\n    }\r\n  }\r\n\r\n  substrings.push(String.fromCharCode.apply(null, out));\r\n  return substrings.join('');\r\n}\r\n","/* eslint-disable @typescript-eslint/camelcase */\r\nimport '../Platform/Platform';\r\nimport '../Environment';\r\nimport { RenderBatch } from './RenderBatch/RenderBatch';\r\nimport { BrowserRenderer } from './BrowserRenderer';\r\nimport { toLogicalElement, LogicalElement } from './LogicalElements';\r\n\r\ninterface BrowserRendererRegistry {\r\n  [browserRendererId: number]: BrowserRenderer;\r\n}\r\nconst browserRenderers: BrowserRendererRegistry = {};\r\nlet shouldResetScrollAfterNextBatch = false;\r\n\r\nexport function attachRootComponentToLogicalElement(browserRendererId: number, logicalElement: LogicalElement, componentId: number): void {\r\n  let browserRenderer = browserRenderers[browserRendererId];\r\n  if (!browserRenderer) {\r\n    browserRenderer = browserRenderers[browserRendererId] = new BrowserRenderer(browserRendererId);\r\n  }\r\n\r\n  browserRenderer.attachRootComponentToLogicalElement(componentId, logicalElement);\r\n}\r\n\r\nexport function attachRootComponentToElement(elementSelector: string, componentId: number, browserRendererId?: number): void {\r\n  const element = document.querySelector(elementSelector);\r\n  if (!element) {\r\n    throw new Error(`Could not find any element matching selector '${elementSelector}'.`);\r\n  }\r\n\r\n  // 'allowExistingContents' to keep any prerendered content until we do the first client-side render\r\n  // Only client-side Blazor supplies a browser renderer ID\r\n  attachRootComponentToLogicalElement(browserRendererId || 0, toLogicalElement(element, /* allow existing contents */ true), componentId);\r\n}\r\n\r\nexport function renderBatch(browserRendererId: number, batch: RenderBatch): void {\r\n  const browserRenderer = browserRenderers[browserRendererId];\r\n  if (!browserRenderer) {\r\n    throw new Error(`There is no browser renderer with ID ${browserRendererId}.`);\r\n  }\r\n\r\n  const arrayRangeReader = batch.arrayRangeReader;\r\n  const updatedComponentsRange = batch.updatedComponents();\r\n  const updatedComponentsValues = arrayRangeReader.values(updatedComponentsRange);\r\n  const updatedComponentsLength = arrayRangeReader.count(updatedComponentsRange);\r\n  const referenceFrames = batch.referenceFrames();\r\n  const referenceFramesValues = arrayRangeReader.values(referenceFrames);\r\n  const diffReader = batch.diffReader;\r\n\r\n  for (let i = 0; i < updatedComponentsLength; i++) {\r\n    const diff = batch.updatedComponentsEntry(updatedComponentsValues, i);\r\n    const componentId = diffReader.componentId(diff);\r\n    const edits = diffReader.edits(diff);\r\n    browserRenderer.updateComponent(batch, componentId, edits, referenceFramesValues);\r\n  }\r\n\r\n  const disposedComponentIdsRange = batch.disposedComponentIds();\r\n  const disposedComponentIdsValues = arrayRangeReader.values(disposedComponentIdsRange);\r\n  const disposedComponentIdsLength = arrayRangeReader.count(disposedComponentIdsRange);\r\n  for (let i = 0; i < disposedComponentIdsLength; i++) {\r\n    const componentId = batch.disposedComponentIdsEntry(disposedComponentIdsValues, i);\r\n    browserRenderer.disposeComponent(componentId);\r\n  }\r\n\r\n  const disposedEventHandlerIdsRange = batch.disposedEventHandlerIds();\r\n  const disposedEventHandlerIdsValues = arrayRangeReader.values(disposedEventHandlerIdsRange);\r\n  const disposedEventHandlerIdsLength = arrayRangeReader.count(disposedEventHandlerIdsRange);\r\n  for (let i = 0; i < disposedEventHandlerIdsLength; i++) {\r\n    const eventHandlerId = batch.disposedEventHandlerIdsEntry(disposedEventHandlerIdsValues, i);\r\n    browserRenderer.disposeEventHandler(eventHandlerId);\r\n  }\r\n\r\n  resetScrollIfNeeded();\r\n}\r\n\r\nexport function resetScrollAfterNextBatch() {\r\n  shouldResetScrollAfterNextBatch = true;\r\n}\r\n\r\nfunction resetScrollIfNeeded() {\r\n  if (shouldResetScrollAfterNextBatch) {\r\n    shouldResetScrollAfterNextBatch = false;\r\n\r\n    // This assumes the scroller is on the window itself. There isn't a general way to know\r\n    // if some other element is playing the role of the primary scroll region.\r\n    window.scrollTo && window.scrollTo(0, 0);\r\n  }\r\n}\r\n","import { EventDescriptor } from './BrowserRenderer';\nimport { UIEventArgs } from './EventForDotNet';\n\ntype EventDispatcher = (eventDescriptor: EventDescriptor, eventArgs: UIEventArgs) => void;\n\nlet eventDispatcherInstance: EventDispatcher;\n\nexport function dispatchEvent(eventDescriptor: EventDescriptor, eventArgs: UIEventArgs): void {\n  if (!eventDispatcherInstance) {\n    throw new Error('eventDispatcher not initialized. Call \\'setEventDispatcher\\' to configure it.');\n  }\n\n  return eventDispatcherInstance(eventDescriptor, eventArgs);\n}\n\nexport function setEventDispatcher(newDispatcher: (eventDescriptor: EventDescriptor, eventArgs: UIEventArgs) => Promise<void>): void {\n  eventDispatcherInstance = newDispatcher;\n}\n","import { platform } from '../Environment';\r\nimport { MethodHandle, System_String, System_Array } from '../Platform/Platform';\r\nconst httpClientAssembly = 'Microsoft.AspNetCore.Blazor';\r\nconst httpClientNamespace = `${httpClientAssembly}.Http`;\r\nconst httpClientTypeName = 'WebAssemblyHttpMessageHandler';\r\nlet receiveResponseMethod: MethodHandle;\r\nlet allocateArrayMethod: MethodHandle;\r\n\r\n// These are the functions we're making available for invocation from .NET\r\nexport const internalFunctions = {\r\n  sendAsync,\r\n};\r\n\r\nasync function sendAsync(id: number, body: System_Array<any>, jsonFetchArgs: System_String) {\r\n  let response: Response;\r\n  let responseData: ArrayBuffer;\r\n\r\n  const fetchOptions: FetchOptions = JSON.parse(platform.toJavaScriptString(jsonFetchArgs));\r\n  const requestInit: RequestInit = Object.assign(convertToRequestInit(fetchOptions.requestInit), fetchOptions.requestInitOverrides);\r\n\r\n  if (body) {\r\n    requestInit.body = platform.toUint8Array(body);\r\n  }\r\n\r\n  try {\r\n    response = await fetch(fetchOptions.requestUri, requestInit);\r\n    responseData = await response.arrayBuffer();\r\n  } catch (ex) {\r\n    dispatchErrorResponse(id, ex.toString());\r\n    return;\r\n  }\r\n\r\n  dispatchSuccessResponse(id, response, responseData);\r\n}\r\n\r\nfunction convertToRequestInit(blazorRequestInit: BlazorRequestInit) {\r\n  return {\r\n    credentials: blazorRequestInit.credentials,\r\n    method: blazorRequestInit.method,\r\n    headers: blazorRequestInit.headers.map(item => [item.name, item.value])\r\n  };\r\n}\r\n\r\nfunction dispatchSuccessResponse(id: number, response: Response, responseData: ArrayBuffer) {\r\n  const responseDescriptor: ResponseDescriptor = {\r\n    statusCode: response.status,\r\n    statusText: response.statusText,\r\n    headers: [],\r\n  };\r\n  response.headers.forEach((value, name) => {\r\n    responseDescriptor.headers.push({ name: name, value: value });\r\n  });\r\n\r\n  if (!allocateArrayMethod) {\r\n    allocateArrayMethod = platform.findMethod(\r\n      httpClientAssembly,\r\n      httpClientNamespace,\r\n      httpClientTypeName,\r\n      'AllocateArray'\r\n    );\r\n  }\r\n\r\n  // allocate a managed byte[] of the right size\r\n  const dotNetArray = platform.callMethod(allocateArrayMethod, null, [platform.toDotNetString(responseData.byteLength.toString())]) as System_Array<any>;\r\n\r\n  // get an Uint8Array view of it\r\n  const array = platform.toUint8Array(dotNetArray);\r\n\r\n  // copy the responseData to our managed byte[]\r\n  array.set(new Uint8Array(responseData));\r\n\r\n  dispatchResponse(\r\n    id,\r\n    platform.toDotNetString(JSON.stringify(responseDescriptor)),\r\n    dotNetArray,\r\n    /* errorMessage */ null\r\n  );\r\n}\r\n\r\nfunction dispatchErrorResponse(id: number, errorMessage: string) {\r\n  dispatchResponse(\r\n    id,\r\n    /* responseDescriptor */ null,\r\n    /* responseText */ null,\r\n    platform.toDotNetString(errorMessage)\r\n  );\r\n}\r\n\r\nfunction dispatchResponse(id: number, responseDescriptor: System_String | null, responseData: System_Array<any> | null, errorMessage: System_String | null) {\r\n  if (!receiveResponseMethod) {\r\n    receiveResponseMethod = platform.findMethod(\r\n      httpClientAssembly,\r\n      httpClientNamespace,\r\n      httpClientTypeName,\r\n      'ReceiveResponse'\r\n    );\r\n  }\r\n\r\n  platform.callMethod(receiveResponseMethod, null, [\r\n    platform.toDotNetString(id.toString()),\r\n    responseDescriptor,\r\n    responseData,\r\n    errorMessage,\r\n  ]);\r\n}\r\n\r\n// Keep these in sync with the .NET equivalent in WebAssemblyHttpMessageHandler.cs\r\ninterface FetchOptions {\r\n  requestUri: string;\r\n  requestInit: BlazorRequestInit;\r\n  requestInitOverrides: RequestInit;\r\n}\r\n\r\ninterface BlazorRequestInit {\r\n  credentials: string;\r\n  headers: Header[];\r\n  method: string;\r\n}\r\n\r\ninterface ResponseDescriptor {\r\n  // We don't have BodyText in here because if we did, then in the JSON-response case (which\r\n  // is the most common case), we'd be double-encoding it, since the entire ResponseDescriptor\r\n  // also gets JSON encoded. It would work but is twice the amount of string processing.\r\n  statusCode: number;\r\n  statusText: string;\r\n  headers: Header[];\r\n}\r\n\r\ninterface Header {\r\n  name: string;\r\n  value: string;\r\n}\r\n","import '@dotnet/jsinterop';\r\nimport { resetScrollAfterNextBatch } from '../Rendering/Renderer';\r\n\r\nlet hasRegisteredNavigationInterception = false;\r\nlet hasRegisteredNavigationEventListeners = false;\r\n\r\n// Will be initialized once someone registers\r\nlet notifyLocationChangedCallback: ((uri: string, intercepted: boolean) => Promise<void>) | null = null;\r\n\r\n// These are the functions we're making available for invocation from .NET\r\nexport const internalFunctions = {\r\n  listenForNavigationEvents,\r\n  enableNavigationInterception,\r\n  navigateTo,\r\n  getBaseURI: () => document.baseURI,\r\n  getLocationHref: () => location.href,\r\n};\r\n\r\nfunction listenForNavigationEvents(callback: (uri: string, intercepted: boolean) => Promise<void>) {\r\n  notifyLocationChangedCallback = callback;\r\n\r\n  if (hasRegisteredNavigationEventListeners) {\r\n    return;\r\n  }\r\n\r\n  hasRegisteredNavigationEventListeners = true;\r\n  window.addEventListener('popstate', () => notifyLocationChanged(false));\r\n}\r\n\r\nfunction enableNavigationInterception() {\r\n  if (hasRegisteredNavigationInterception) {\r\n    return;\r\n  }\r\n\r\n  hasRegisteredNavigationInterception = true;\r\n\r\n  document.addEventListener('click', event => {\r\n    if (event.button !== 0 || eventHasSpecialKey(event)) {\r\n      // Don't stop ctrl/meta-click (etc) from opening links in new tabs/windows\r\n      return;\r\n    }\r\n\r\n    // Intercept clicks on all <a> elements where the href is within the <base href> URI space\r\n    // We must explicitly check if it has an 'href' attribute, because if it doesn't, the result might be null or an empty string depending on the browser\r\n    const anchorTarget = findClosestAncestor(event.target as Element | null, 'A') as HTMLAnchorElement;\r\n    const hrefAttributeName = 'href';\r\n    if (anchorTarget && anchorTarget.hasAttribute(hrefAttributeName)) {\r\n      const targetAttributeValue = anchorTarget.getAttribute('target');\r\n      const opensInSameFrame = !targetAttributeValue || targetAttributeValue === '_self';\r\n      if (!opensInSameFrame) {\r\n        return;\r\n      }\r\n\r\n      const href = anchorTarget.getAttribute(hrefAttributeName)!;\r\n      const absoluteHref = toAbsoluteUri(href);\r\n\r\n      if (isWithinBaseUriSpace(absoluteHref)) {\r\n        event.preventDefault();\r\n        performInternalNavigation(absoluteHref, true);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nexport function navigateTo(uri: string, forceLoad: boolean) {\r\n  const absoluteUri = toAbsoluteUri(uri);\r\n\r\n  if (!forceLoad && isWithinBaseUriSpace(absoluteUri)) {\r\n    // It's an internal URL, so do client-side navigation\r\n    performInternalNavigation(absoluteUri, false);\r\n  } else if (forceLoad && location.href === uri) {\r\n    // Force-loading the same URL you're already on requires special handling to avoid\r\n    // triggering browser-specific behavior issues.\r\n    // For details about what this fixes and why, see https://github.com/aspnet/AspNetCore/pull/10839\r\n    const temporaryUri = uri + '?';\r\n    history.replaceState(null, '', temporaryUri);\r\n    location.replace(uri);\r\n  } else {\r\n    // It's either an external URL, or forceLoad is requested, so do a full page load\r\n    location.href = uri;\r\n  }\r\n}\r\n\r\nfunction performInternalNavigation(absoluteInternalHref: string, interceptedLink: boolean) {\r\n  // Since this was *not* triggered by a back/forward gesture (that goes through a different\r\n  // code path starting with a popstate event), we don't want to preserve the current scroll\r\n  // position, so reset it.\r\n  // To avoid ugly flickering effects, we don't want to change the scroll position until the\r\n  // we render the new page. As a best approximation, wait until the next batch.\r\n  resetScrollAfterNextBatch();\r\n\r\n  history.pushState(null, /* ignored title */ '', absoluteInternalHref);\r\n  notifyLocationChanged(interceptedLink);\r\n}\r\n\r\nasync function notifyLocationChanged(interceptedLink: boolean) {\r\n  if (notifyLocationChangedCallback) {\r\n    await notifyLocationChangedCallback(location.href, interceptedLink);\r\n  }\r\n}\r\n\r\nlet testAnchor: HTMLAnchorElement;\r\nfunction toAbsoluteUri(relativeUri: string) {\r\n  testAnchor = testAnchor || document.createElement('a');\r\n  testAnchor.href = relativeUri;\r\n  return testAnchor.href;\r\n}\r\n\r\nfunction findClosestAncestor(element: Element | null, tagName: string) {\r\n  return !element\r\n    ? null\r\n    : element.tagName === tagName\r\n      ? element\r\n      : findClosestAncestor(element.parentElement, tagName);\r\n}\r\n\r\nfunction isWithinBaseUriSpace(href: string) {\r\n  const baseUriWithTrailingSlash = toBaseUriWithTrailingSlash(document.baseURI!); // TODO: Might baseURI really be null?\r\n  return href.startsWith(baseUriWithTrailingSlash);\r\n}\r\n\r\nfunction toBaseUriWithTrailingSlash(baseUri: string) {\r\n  return baseUri.substr(0, baseUri.lastIndexOf('/') + 1);\r\n}\r\n\r\nfunction eventHasSpecialKey(event: MouseEvent) {\r\n  return event.ctrlKey || event.shiftKey || event.altKey || event.metaKey;\r\n}"],"sourceRoot":""}